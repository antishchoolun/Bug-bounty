<?php
/**
* Plugin Name: Cost Calculator & Cost Estimation Builder Pro
* Plugin URI: https://dev.wall-f.com/calculator/
* Description:  WordPress Calculator helps you to build any type of estimation forms on a few easy steps
* Author: Rednumber
* Version: 1.7
* Text Domain: calculation-forms
* Domain Path: /languages/
* Author URI: https://codecanyon.net/user/rednumber/portfolio
*/
if ( !function_exists( 'add_action' ) ) {
    echo 'Hi there!  I\'m just a plugin, not much I can do when called directly.';
    exit;
}
define( 'CALCULATION_FORMS_PLUGIN_URL', plugin_dir_url( __FILE__ ) );
define( 'CALCULATION_FORMS_PLUGIN_PATH', plugin_dir_path( __FILE__ ) );
define( 'CALCULATION_FORMS_PREMIUM', true );
include CALCULATION_FORMS_PLUGIN_PATH."rednumber/check_purchase_code.php";
include CALCULATION_FORMS_PLUGIN_PATH."vendor/autoload.php";
foreach (glob(CALCULATION_FORMS_PLUGIN_PATH."backend/*.php") as $filename){
    include $filename;
}
foreach (glob(CALCULATION_FORMS_PLUGIN_PATH."backend/block_editor/*.php") as $filename){
    include $filename;
}
foreach (glob(CALCULATION_FORMS_PLUGIN_PATH."fields/*.php") as $filename){
    include $filename;
}
foreach (glob(CALCULATION_FORMS_PLUGIN_PATH."frontend/*.php") as $filename){
    include $filename;
}
$dir = new RecursiveDirectoryIterator(CALCULATION_FORMS_PLUGIN_PATH."modules");
$ite = new RecursiveIteratorIterator($dir);
$files = new RegexIterator($ite, "/\.php/", RegexIterator::MATCH);
foreach ($files as $file) {
    if (!$file->isDir()){
        include $file->getPathname();
    }
}
new rednumber_check_purchase_code( 
    array("plugin" => "calculation-forms/calculation-forms.php",
        "id"=>"34591796")
);
<?php
class Calculation_Froms_Settings_Zapier {
    function __construct(){
        add_action("calculation_forms_tab_settings",array($this,"add_tab"));
        add_action("calculation_forms_tab_page",array($this,"add_page"));
        add_action("save_post",array($this,"save_post"));
        add_action("calculation_form_submit_success",array($this,"submit"),10,3);
    }
    function submit($datas, $form, $form_id){
        $url = get_post_meta( $form_id, '_calculation_forms_zapier', true );
        if (filter_var($url, FILTER_VALIDATE_URL)) {
            wp_remote_post($url, array('body' => $datas));
        }
    }
    function add_page($post){
        $post_id = $post->ID;
        ?>
        <div class="calculation-forms-content-tab calculation-forms-content-tab-style calculation-forms-content-tab-zapier hidden">
            <h3><?php esc_html_e("Zapier","calculation-forms") ?></h3>
            <?php 
            $datas = get_post_meta( $post_id, '_calculation_forms_zapier', true );
            if (  empty( $datas ) ) {
                $datas = "";
            }
            ?>
            <ul>
                <li>
                    <label for=""><?php esc_html_e("Webhook URL","calculation-forms") ?></label>
                    <input type="text" name="calculation_forms_zapier" value="<?php echo esc_url($datas) ?>">
                </li>
            </ul>
            </ul>
           </div>
        <?php
    }
    function save_post($post_id){
         /*
         * We need to verify this came from the our screen and with proper authorization,
         * because save_post can be triggered at other times.
         */
        // Check if our nonce is set.
        if ( ! isset( $_POST['calculation_forms_box_nonce'] ) ) {
            return $post_id;
        }
        $nonce = $_POST['calculation_forms_box_nonce'];
        // Verify that the nonce is valid.
        if ( ! wp_verify_nonce( $nonce, 'calculation_forms_box_nonce' ) ) {
            return $post_id;
        }
        /*
         * If this is an autosave, our form has not been submitted,
         * so we don't want to do anything.
         */
        if ( defined( 'DOING_AUTOSAVE' ) && DOING_AUTOSAVE ) {
            return $post_id;
        }
        // Check the user's permissions.
        if ( 'page' == $_POST['post_type'] ) {
            if ( ! current_user_can( 'edit_page', $post_id ) ) {
                return $post_id;
            }
        } else {
            if ( ! current_user_can( 'edit_post', $post_id ) ) {
                return $post_id;
            }
        }
        /* OK, it's safe for us to save the data now. */
        // Sanitize the user input.
        update_post_meta( $post_id, '_calculation_forms_zapier', sanitize_text_field($_POST["calculation_forms_zapier"]));
    }
    function add_tab(){
        ?>
        <li>
            <a data-tab=".calculation-forms-content-tab-zapier" href="#"><?php esc_html_e("Zapier","calculation-forms") ?></a>
        </li>
        <?php
    }
}
new Calculation_Froms_Settings_Zapier;
<?php
class Calculation_Froms_Import_Export_Form { 
	function __construct(){
		add_action( 'add_meta_boxes', array( $this, 'add_meta_boxes' ) );
	}
	function add_meta_boxes() {
        add_meta_box(
            'form-builder-import-export',
            esc_html__( 'Import/Export Form', 'calculation-forms' ),
            array( $this, 'form_main' ),
            'calculation_forms',
            'side',
            'high'
        );
    }
    function form_main($post){
    	?>
    	<a class="button button-large calculation-form-import" href="#"><?php esc_html_e("Import Form","calculation-forms") ?></a>
    	<a class="button button-large calculation-form-export" href="#"><?php esc_html_e("Export Form","calculation-forms") ?></a>
    	<?php
    }
}
new Calculation_Froms_Import_Export_Form;
<?php
class Calculation_Froms_Payment_Setiings {
    function __construct(){
        add_action("calculation_forms_tab",array($this,"add_tab"));
        add_action("calculation_forms_tab_page",array($this,"add_page"));
        add_action("save_post",array($this,"save_post"));
    }
    
    function add_tab(){
        ?>
        <li>
            <a data-tab=".calculation-forms-content-tab-paypal" href="#"><?php esc_html_e("Payment","calculation-forms") ?></a>
        </li>
        <?php
    }
    function add_page($post){
        $post_id = $post->ID;
        ?>
        <div class="calculation-forms-content-tab calculation-forms-content-tab-paypal hidden">
            <h3><?php esc_html_e("Payment","calculation-forms") ?></h3>
            <?php 
            $data_paypal = get_post_meta( $post_id, '_calculation_form_paypal', true );
            if (  empty( $data_paypal ) ) {
                $data_paypal = array("price"=>"","quantiy"=>1);
            }
            ?>
            <ul>
                <li>
                    <label for=""><?php esc_html_e("Price Field (required)","calculation-forms") ?></label>
                    <?php 
                    Calculation_Froms_Backend::load_text_name("cf_paypal[price]", $data_paypal["price"] );
                    ?>
                </li>
                <li>
                    <label for=""><?php esc_html_e("Quantity","calculation-forms") ?></label>
                    <?php 
                    Calculation_Froms_Backend::load_text_name("cf_paypal[quantiy]", $data_paypal["quantiy"] );
                    ?>
                </li>
            </ul>
           </div>
        <?php
    }
    function save_post($post_id){
         /*
         * We need to verify this came from the our screen and with proper authorization,
         * because save_post can be triggered at other times.
         */
        // Check if our nonce is set.
        if ( ! isset( $_POST['calculation_forms_box_nonce'] ) ) {
            return $post_id;
        }
        $nonce = $_POST['calculation_forms_box_nonce'];
        // Verify that the nonce is valid.
        if ( ! wp_verify_nonce( $nonce, 'calculation_forms_box_nonce' ) ) {
            return $post_id;
        }
        /*
         * If this is an autosave, our form has not been submitted,
         * so we don't want to do anything.
         */
        if ( defined( 'DOING_AUTOSAVE' ) && DOING_AUTOSAVE ) {
            return $post_id;
        }
        // Check the user's permissions.
        if ( 'page' == $_POST['post_type'] ) {
            if ( ! current_user_can( 'edit_page', $post_id ) ) {
                return $post_id;
            }
        } else {
            if ( ! current_user_can( 'edit_post', $post_id ) ) {
                return $post_id;
            }
        }
        /* OK, it's safe for us to save the data now. */
        // Sanitize the user input.
        $paypal = array();
        
        if( isset( $_POST['cf_paypal'] ) && is_array($_POST['cf_paypal'])){
            foreach( $_POST['cf_paypal'] as $key => $value ) { 
                $paypal[$key] = sanitize_text_field($value); 
            }
        }
        update_post_meta( $post_id, '_calculation_form_paypal', $paypal );
    }
}
new Calculation_Froms_Payment_Setiings;
<?php
class Calculation_Froms_Setiings
{
    public function __construct(){
        add_action( 'admin_menu', array( $this, 'add_plugin_page' ) );
    }
    function add_plugin_page(){
		add_submenu_page('edit.php?post_type=calculation_forms',esc_html__("Settings","calculation-forms") , esc_html__("Settings","calculation-forms"), 'manage_options','calculation-forms-settings', array($this,'settings_page')  );
		add_submenu_page('edit.php?post_type=calculation_forms',esc_html__("Add-ons","calculation-forms"), esc_html__("Add-ons","calculation-forms"), 'manage_options','calculation-forms-add-ons', array($this,'settings_page')  );
		add_action( 'admin_init', array($this,'register_settings') );
		add_action("calculation_forms_settings_render_settings",array($this,"settings_page_render"));
	}
	function register_settings(){
		register_setting( 'calculation_forms_settings', 'calculation_forms_settings' );
	}
	function settings_page_render(){
		$datas = get_option("calculation_forms_settings",array("currencies","USD","paypal_client"=>"","paypal_secret_key"=>"","recaptcha_site_key"=>"","recaptcha_secret_key"=>"","paypal_sandbox"=>"ok"));
		?>
		<div class="calculation_forms_settings_title"><?php esc_html_e("General Settings","calculation-forms") ?></div>
		<form method="post" action="options.php">
					    <?php settings_fields( 'calculation_forms_settings' ); ?>
					    <?php do_settings_sections( 'calculation_forms_settings' ); ?>
					    <table class="form-table">
					      <tr valign="top">
						        <th scope="row"><?php esc_html_e("Currency","calculation-forms") ?> </th>
						        <td>
						        	<div class="wp-core-ui">
						        		<select name="calculation_forms_settings[currencies]">
						                    <option value="USD"><?php esc_html_e("U.S. Dollar","calculation-forms") ?></option>
						                    <option <?php selected( $datas["currencies"], "AUD") ?> value="AUD"><?php esc_html_e("Australian Dollar","calculation-forms") ?></option>
						                    <option <?php selected( $datas["currencies"], "BRL") ?> value="BRL"><?php esc_html_e("Brazilian Real","calculation-forms") ?></option>
						                    <option <?php selected( $datas["currencies"], "CAD") ?> value="CAD"><?php esc_html_e("Canadian Dollar","calculation-forms") ?></option>
						                    <option <?php selected( $datas["currencies"], "CZK") ?> value="CZK"><?php esc_html_e("Czech Koruna","calculation-forms") ?></option>
						                    <option <?php selected( $datas["currencies"], "DKK") ?> value="DKK"><?php esc_html_e("Danish Krone","calculation-forms") ?></option>
						                    <option <?php selected( $datas["currencies"], "EUR") ?> value="EUR"><?php esc_html_e("Euro","calculation-forms") ?></option>
						                    <option <?php selected( $datas["currencies"], "HKD") ?> value="HKD"><?php esc_html_e("Hong Kong Dollar","calculation-forms") ?></option>
						                    <option <?php selected( $datas["currencies"], "HUF") ?> value="HUF"><?php esc_html_e("Hungarian Forint","calculation-forms") ?></option>
						                    <option <?php selected( $datas["currencies"], "ILS") ?> value="ILS"><?php esc_html_e("Israeli New Sheqel","calculation-forms") ?></option>
						                    <option <?php selected( $datas["currencies"], "JPY") ?> value="JPY"><?php esc_html_e("Japanese Yen","calculation-forms") ?></option>
						                    <option <?php selected( $datas["currencies"], "MYR") ?> value="MYR"><?php esc_html_e("Malaysian Ringgit","calculation-forms") ?></option>
						                    <option <?php selected( $datas["currencies"], "MXN") ?> value="MXN"><?php esc_html_e("Mexican Peso","calculation-forms") ?></option>
						                    <option <?php selected( $datas["currencies"], "NOK") ?> value="NOK"><?php esc_html_e("Norwegian Krone","calculation-forms") ?></option>
						                    <option <?php selected( $datas["currencies"], "NZD") ?> value="NZD"><?php esc_html_e("New Zealand Dollar","calculation-forms") ?></option>
						                    <option <?php selected( $datas["currencies"], "PHP") ?> value="PHP"><?php esc_html_e("Philippine Peso","calculation-forms") ?></option>
						                    <option <?php selected( $datas["currencies"], "PLN") ?> value="PLN"><?php esc_html_e("Polish Zloty","calculation-forms") ?></option>
						                    <option <?php selected( $datas["currencies"], "GBP") ?> value="GBP"><?php esc_html_e("Pound Sterling","calculation-forms") ?></option>
						                    <option <?php selected( $datas["currencies"], "RUB") ?> value="RUB"><?php esc_html_e("Russian Ruble","calculation-forms") ?></option>
						                    <option <?php selected( $datas["currencies"], "SGD") ?> value="SGD"><?php esc_html_e("Singapore Dollar","calculation-forms") ?></option>
						                    <option <?php selected( $datas["currencies"], "SEK") ?> value="SEK"><?php esc_html_e("Swedish Krona","calculation-forms") ?></option>
						                    <option <?php selected( $datas["currencies"], "CHF") ?> value="CHF"><?php esc_html_e("ASwiss Franc","calculation-forms") ?></option>
						                    <option <?php selected( $datas["currencies"], "TWD") ?> value="TWD"><?php esc_html_e("Taiwan New Dollar","calculation-forms") ?></option>
						                    <option <?php selected( $datas["currencies"], "THB") ?> value="THB"><?php esc_html_e("Thai Baht","calculation-forms") ?></option>
						                    <option <?php selected( $datas["currencies"], "TRY") ?> value="TRY"><?php esc_html_e("Turkish Lira","calculation-forms") ?></option>
						        		</select>
						        	</div>
						        </td>
					        </tr>
					    </table>
					    <?php do_action("calculation_forms_settings_payment",$datas) ?>
					    <h3><?php esc_html_e("reCaptcha Settings (v3)","calculation-forms") ?></h3>
					    <table class="form-table">
					      <tr valign="top">
						        <th scope="row"><?php esc_html_e("reCAPTCHA Site Key","calculation-forms") ?> </th>
						        <td>
						        	<input name="calculation_forms_settings[recaptcha_site_key]" type="text" value="<?php echo esc_attr($datas["recaptcha_site_key"]) ?>" class="regular-text">
						        </td>
					       </tr>
					       <tr valign="top">
						        <th scope="row"><?php esc_html_e("reCAPTCHA Secret Key","calculation-forms") ?> </th>
						        <td>
						        	<input name="calculation_forms_settings[recaptcha_secret_key]" type="text" value="<?php echo esc_attr($datas["recaptcha_secret_key"]) ?>" class="regular-text">
						        </td>
					       </tr>
					    </table>
					    <?php do_action("calculation_forms_settings",$datas) ?>
					    <?php submit_button(); ?>
					</form>
					<?php
	}
	function settings_page(){
		$tab_view = "settings";
		?>
		<div class="wrap">
		<h1 class="text-center"><?php esc_html_e("Calculation Forms Settings","calculation-forms") ?></h1>
		<div class="calculation-forms-container-gird">
			<div class="calculation-forms-container-gird-nav">
				<ul>
				<?php 
					$tabs = array("settings"=>array("label"=>__("Settings","calculation-forms") )); 
					$tabs = apply_filters("calculation_forms_settings_menu",$tabs); 
					foreach($tabs as $key => $tab ){
						$link = add_query_arg(array("page"=>"calculation-forms-settings","tab"=>$key),get_admin_url()."edit.php?post_type=calculation_forms");
						$class ="";
						if( isset($_GET["tab"])){
							$tab_view = sanitize_text_field($_GET['tab']);
						}
						if($tab_view == $key){
							$class ="active";
						}
						?>
						<li class=" <?php echo esc_attr($class) ?>"><a href="<?php echo esc_url($link) ?>"><?php echo esc_html($tab["label"]) ?></a></li>
						<?php
					}
				?>
				</ul>
			</div>
			<div class="calculation_forms_settings-container">
				 <div class="calculation_forms_settings-tab-settings">
				 	<?php
				 		do_action("calculation_forms_settings_render");
				 		do_action("calculation_forms_settings_render_".$tab_view);
				 	 ?>
				 </div>
			</div>
		</div>
	</div>
		<?php
	}
}
new Calculation_Froms_Setiings;
<?php 
class Calculation_Forms_Submissions{
    function __construct(){
        add_filter("calculation_form_before_submit",array($this,"save_data"),100,4);
        add_action( 'add_meta_boxes', array( $this, 'add_meta_boxes' ) );
        add_action( 'save_post',array( $this, 'save' ) );
        add_filter( 'manage_cf_submissions_posts_columns',  array($this,"add_colunms"),100,1);
        add_action( 'manage_cf_submissions_posts_custom_column' , array($this,'custom_column'), 10, 2 );
        add_action( 'restrict_manage_posts', array($this,'add_admin_filters'), 10, 1 );
        add_filter( 'parse_query', array($this,'filter_request_query') , 10);
    }
    public function add_admin_filters( $post_type ){
        if( 'cf_submissions' !== $post_type ){
            return;
        }
        ?>
        <select name="calculation_forms_id">
            <option value="0"><?php esc_html_e("All Forms","calculation-forms") ?></option>
            <?php
                $query = new WP_Query( array( "post_type"=>"calculation_forms",'posts_per_page' => -1 ) );
                while ( $query->have_posts() ) {
                $query->the_post();
                $selected = "";
                if( isset($_REQUEST['calculation_forms_id'])) {
                    $selected = selected(sanitize_key($_REQUEST['calculation_forms_id']),get_the_ID(),false);
                }
                ?>
                <option <?php echo esc_html($selected) ?> value="<?php the_ID() ?>"><?php the_title() ?></option>
                <?php 
            }
                wp_reset_postdata();
             ?>
        </select>
        <?php  
    }
    function filter_request_query($query){
        if( !(is_admin() AND $query->is_main_query()) ){ 
          return $query;
        }
        //we want to modify the query for the targeted custom post and filter option
        if( !('cf_submissions' === $query->query['post_type'] AND isset($_REQUEST['calculation_forms_id']) ) ){
          return $query;
        }
        //for the default value of our filter no modification is required
        if(0 == $_REQUEST['calculation_forms_id']){
          return $query;
        }
        if( isset($_REQUEST['calculation_forms_id'])) {
           $query->query_vars['meta_key'] = '_form_id';
             $query->query_vars['meta_value'] = sanitize_key( $_REQUEST['calculation_forms_id'] );
             $query->query_vars['meta_compare'] = '='; 
        }
        return $query;
      }
    function add_colunms($columns) {
        global $post;
        $columns['payment'] = esc_html__( 'Status Payment', "calculation-forms" );
        $columns['form'] = esc_html__( 'Form', "calculation-forms" );
        return $columns;
    }
    function custom_column( $column, $post_id ) {
        //var_dump($column)
        switch ( $column ) {
            case 'payment' :
                $payment = get_post_meta( $post_id , '_payment' , true ); 
                esc_html_e($payment,"calculation-forms");
                break;
            case 'form' :
                $form_id = get_post_meta( $post_id , '_form_id' , true ); 
                echo esc_html( get_the_title($form_id));
                break;
        }
    }
    function save_data($datas,$form, $form_id, $mail_attachments){
        $title ="";
        $data_return =array();
        $datas["_form_id"] = $form_id;
        foreach( $datas as $data ){
           $title .= $data;
           break;
        }
        $post_id = wp_insert_post(array(
            "post_title"=>$title,
            "post_content"=>json_encode($datas,JSON_UNESCAPED_UNICODE ),
            'post_status'   => 'publish',
            'post_type' => 'cf_submissions'
        ));
        $data_return["submission_id"] = $post_id;
        update_post_meta( $post_id, '_form_id', $form_id );
        update_post_meta( $post_id, '_form_id_mail_attachments', $mail_attachments );
        if( isset($datas["payment"]) && $datas["payment"] == "stripe"){
            update_post_meta( $post_id, '_payment', "completed" );
        }
        $redirect = apply_filters("calculation_form_submissions_success",$form_id, $post_id, $datas,$mail_attachments);
        $data_return["redirect"] = $redirect;
        if (!filter_var($redirect, FILTER_VALIDATE_URL) === FALSE) {
            $data_return["email_disable"] = true;
        }
        return $data_return;
    }
    function add_meta_boxes() {
        add_meta_box(
            'cf_submissions_data',
            esc_html__( 'Datas', 'calculation-forms' ),
            array( $this, 'cf_submissions' ),
            'cf_submissions',
            'normal',
            'default'
        );
    }
    function cf_submissions($post){
        $datas = json_decode($post->post_content,true);
        $post_id = $post->ID;
        wp_nonce_field( 'calculation_forms_submissions_box_nonce', 'calculation_forms_submissions_box_nonce' );
        ?>
        <div>
            <ul>
                <?php foreach($datas as $k=>$v) { 
                    $class ="";
                    if($k == "_form_id"){
                        $class ="hidden";
                    }
                    ?>
                <li class="<?php echo esc_attr($class) ?>">
                    <div class="cf_submissions-lable">
                        <?php 
                        $lable = Calculation_Forms_Process::get_data_element($k,"label",$datas["_form_id"]);
                        echo esc_html( $lable ); ?>
                    </div>
                    <div class="cf_submissions-content-">
                        <?php 
                            if(is_array($v)){
                                foreach($v as $vl){
                                ?>
                            <input type="checkbox" checked name="cf_submissions[<?php echo esc_attr($k) ?>][]" value="<?php echo esc_html( $vl ) ?>"> <?php echo esc_html( $vl ) ?> 
                                <?php
                                }
                            }else{
                                ?>
                            <input type="text" name="cf_submissions[<?php echo esc_attr($k) ?>]" value="<?php echo esc_html( $v ) ?>">  
                                <?php
                            }
                        ?>
                    </div>
                </li>
            <?php }
                $payment = get_post_meta( $post_id , '_payment' , true );
                if( isset($payment) && $payment != ""){
                    $total = get_post_meta( $post_id , '_payment_total' , true ); 
                    $currency = get_post_meta( $post_id , '_payment_currency_code' , true ); 
                ?>
                <li class="">
                    <div class="cf_submissions-lable">
                       <?php esc_html_e("Status Payment","calculation-forms") ?>
                    </div>
                    <div class="cf_submissions-content-">
                            <select name="payment[_payment]">
                                <option value="pending payment"><?php esc_html_e("Pending payment","calculation-forms") ?></option>
                                <option <?php selected($payment,"completed") ?> value="completed"><?php esc_html_e("Completed","calculation-forms") ?></option>
                                <option <?php selected($payment,"failed") ?> value="failed"><?php esc_html_e("Failed","calculation-forms") ?></option>
                            </select>
                    </div>
                </li>
                <li class="">
                    <div class="cf_submissions-lable">
                       <?php esc_html_e("Total","calculation-forms") ?>
                    </div>
                    <div class="cf_submissions-content-">
                            <input type="text" name="payment[_payment_total]" value="<?php echo esc_html( $total ) ?>">
                    </div>
                </li>
                <li class="">
                    <div class="cf_submissions-lable">
                       <?php esc_html_e("Currency","calculation-forms") ?>
                    </div>
                    <div class="cf_submissions-content-">
                        <input type="text" name="payment[_payment_currency_code]" value="<?php echo esc_html( $currency ) ?>">
                    </div>
                </li>
            <?php
                }
             ?>
            </ul>
        </div>
        <?php
    }
     public function save( $post_id ) {
        /*
         * We need to verify this came from the our screen and with proper authorization,
         * because save_post can be triggered at other times.
         */
        // Check if our nonce is set.
        if ( ! isset( $_POST['calculation_forms_submissions_box_nonce'] ) ) {
            return $post_id;
        }
        $nonce = $_POST['calculation_forms_submissions_box_nonce'];
        // Verify that the nonce is valid.
        if ( ! wp_verify_nonce( $nonce, 'calculation_forms_submissions_box_nonce' ) ) {
            return $post_id;
        }
        /*
         * If this is an autosave, our form has not been submitted,
         * so we don't want to do anything.
         */
        if ( defined( 'DOING_AUTOSAVE' ) && DOING_AUTOSAVE ) {
            return $post_id;
        }
        // Check the user's permissions.
        if ( 'page' == $_POST['post_type'] ) {
            if ( ! current_user_can( 'edit_page', $post_id ) ) {
                return $post_id;
            }
        } else {
            if ( ! current_user_can( 'edit_post', $post_id ) ) {
                return $post_id;
            }
        }
        /* OK, it's safe for us to save the data now. */
        // Sanitize the user input.
        $cf_submissions = array();
        if( isset($_POST['payment'] ) && is_array($_POST['payment'])){
            foreach( $_POST['payment'] as $key=>$value){
                $value = sanitize_text_field($value);
                $key = sanitize_key($key);
                update_post_meta( $post_id, $key, $value );
            }
        }
        if( isset($_POST['cf_submissions']) && is_array($_POST['cf_submissions'] )){
            foreach($_POST['cf_submissions'] as $key=>$value){
                $key = sanitize_key($key); 
                $cf_submissions[$key] = sanitize_text_field($value);
            }
        }
        $cf_submissions = json_encode($cf_submissions,JSON_UNESCAPED_UNICODE );
        remove_action('save_post', array($this,"save"));
        wp_update_post(array("post_content"=>$cf_submissions,"ID"=>$post_id)); 
        add_action('save_post', array($this,"save"));       
    }
}
new Calculation_Forms_Submissions;

<?php
class Calculation_Froms_upgrade{ 
	private $link_pro = "https://codecanyon.net/item/calculator-forms-builder/34591796";
	function __construct(){
		if(!CALCULATION_FORMS_PREMIUM){
			add_action( 'add_meta_boxes', array( $this, 'add_meta_boxes' ) );
		}
		add_filter( 'plugin_action_links_cost-calculator-cost-estimation/calculation-forms.php' , array( $this, 'add_action' ) );
		add_filter( 'plugin_action_links_calculation-forms/calculation-forms.php' , array( $this, 'add_action' ) );
	}
	function add_action($links){
		$link_pro = $this->link_pro;
		$settings_link = get_admin_url()."edit.php?post_type=calculation_forms&page=calculation-forms-settings";
		$document = array(
			'<a href="'.esc_url($settings_link) .'">'.esc_html__("Settings","calculation-forms").'</a>',
		);
		$links = array_merge($document,$links);
		$mylinks = array(
				'<a href="'.esc_url("https://dev.wall-f.com/calculator/?page_id=10") .'">'.esc_html__("Document","calculation-forms").'</a>',
		    );
		if( !CALCULATION_FORMS_PREMIUM) {
			$mylinks[] = '<a style="color: #43B854; font-weight: bold" target="_blank" href="'.esc_url($link_pro) .'">'.esc_html__("Go Pro Version","calculation-forms")."</a>";
		}
	    return array_merge( $links, $mylinks );
	}
	function add_meta_boxes() {
        add_meta_box(
            'form-builder-upgrade',
            esc_html__( 'Upgrade Pro Version', 'calculation-forms' ),
            array( $this, 'form_main' ),
            'calculation_forms',
            'side',
            'core'
        );
    }
    function form_main($post){
    	$link_pro = $this->link_pro;
    	?>
    	<a target="_blank" href="<?php echo esc_url($link_pro) ?>">
    		<img src="<?php echo esc_url(CALCULATION_FORMS_PLUGIN_URL."backend/images/upgrade.png") ?>" alt="">
    	</a>
    	<?php
    }
}
new Calculation_Froms_upgrade;
<?php
//php 8
if (!function_exists('str_contains')) {
    function str_contains(string $haystack, string $needle): bool
    {
        return '' === $needle || false !== strpos($haystack, $needle);
    }
}
function calculation_mime_types($mimes) {
        $mimes['json'] = 'text/plain';
        return $mimes; 
    } 
add_filter('upload_mimes', 'calculation_mime_types');
<?php 
class Calculation_Forms_Coupons {
	function __construct(){
		add_action( 'init', array($this,'custom_post_type') );
		add_action( 'add_meta_boxes', array( $this, 'add_meta_boxes' ) );
		add_action( 'save_post',array( $this, 'save' ) );
	}
	function custom_post_type() {
        register_post_type('cf_coupon',
            array(
                'labels'      => array(
                    'name'          => esc_html__( 'Coupons', 'calculation-forms' ),
                    'singular_name' => esc_html__( 'Coupons', 'calculation-forms' ),
                ),
                'public'      => true,
                'has_archive' => true,
                'rewrite'     => array( 'slug' => 'calculation-forms-coupon' ),
                'supports'    =>array('title'),
                'show_in_menu'=> "edit.php?post_type=calculation_forms"
            )
        );
    }
    function add_meta_boxes() {
        add_meta_box(
            'cf_coupon_data',
            esc_html__( 'Coupons', 'calculation-forms' ),
            array( $this, 'cf_submissions' ),
            'cf_coupon',
            'normal',
            'default'
        );
    }
    function cf_submissions($post){
        $post_id = $post->ID;
        $coupons = get_post_meta( $post_id , '_calculation_form_coupon' , true );
        if(!is_array($coupons)){
        	$coupons = array("type"=>"fixed","amount"=>0,"limit"=>100);
        }
        wp_nonce_field( 'calculation_forms_coupon_box_nonce', 'calculation_forms_coupon_box_nonce' );
        ?>
        <div>
        	<div class="cf-coupon-conatiner">
        		<div class="cf-coupon-title">
        			<?php esc_html_e("Discount type","calculation-forms") ?>
        		</div>
        		<div class="cf-coupon-input">
        			<select name="calculation_form_coupon[type]">
        				<option value="fixed"><?php esc_html_e("Fixed Discount","calculation-forms") ?></option>
        				<option <?php selected($coupons["type"],"percentage") ?> value="percentage"><?php esc_html_e("Percentage Discount","calculation-forms") ?></option>
        			</select>
        		</div>
        	</div>
        	<div class="cf-coupon-conatiner">
        		<div class="cf-coupon-title">
        			<?php esc_html_e("Coupon amount","calculation-forms") ?>
        		</div>
        		<div class="cf-coupon-input">
        			<input type="number" name="calculation_form_coupon[amount]" value="<?php echo esc_attr($coupons["amount"]) ?>">
        		</div>
        	</div>
        	<div class="cf-coupon-conatiner">
        		<div class="cf-coupon-title">
        			<?php esc_html_e("Coupon amount","calculation-forms") ?>
        		</div>
        		<div class="cf-coupon-input">
        			<input type="number" name="calculation_form_coupon[limit]" value="<?php echo esc_attr($coupons["limit"]) ?>">
        		</div>
        	</div>
        </div>
        <?php
    }
         public function save( $post_id ) {
        /*
         * We need to verify this came from the our screen and with proper authorization,
         * because save_post can be triggered at other times.
         */
        // Check if our nonce is set.
        if ( ! isset( $_POST['calculation_forms_coupon_box_nonce'] ) ) {
            return $post_id;
        }
        $nonce = $_POST['calculation_forms_coupon_box_nonce'];
        // Verify that the nonce is valid.
        if ( ! wp_verify_nonce( $nonce, 'calculation_forms_coupon_box_nonce' ) ) {
            return $post_id;
        }
        /*
         * If this is an autosave, our form has not been submitted,
         * so we don't want to do anything.
         */
        if ( defined( 'DOING_AUTOSAVE' ) && DOING_AUTOSAVE ) {
            return $post_id;
        }
        // Check the user's permissions.
        if ( 'page' == $_POST['post_type'] ) {
            if ( ! current_user_can( 'edit_page', $post_id ) ) {
                return $post_id;
            }
        } else {
            if ( ! current_user_can( 'edit_post', $post_id ) ) {
                return $post_id;
            }
        }


        if( isset($_POST['calculation_form_coupon']) && is_array($_POST['calculation_form_coupon'] )){
            $cf_coupon = array();
            foreach($_POST['calculation_form_coupon'] as $key=>$value){
                $key = sanitize_text_field($key); 
                $cf_coupon[$key] = sanitize_text_field($value);
            }
            update_post_meta( $post_id, "_calculation_form_coupon", $cf_coupon );
        }
     
    }
}
new Calculation_Forms_Coupons;
<?php
class Calculation_Froms_Backend {
    function __construct(){
        add_action( 'init', array($this,'custom_post_type') );
        add_action( 'add_meta_boxes', array( $this, 'add_meta_boxes' ) );
        add_action('admin_enqueue_scripts', array($this,'add_lib'));
        add_action( 'save_post',array( $this, 'save' ) );
        add_filter( 'manage_calculation_forms_posts_columns',  array($this,"add_colunms"),10000,2);
        add_action( 'manage_calculation_forms_posts_custom_column' , array($this,'custom_column'), 10, 2 );
    }
    function add_colunms($columns) {
        $new = array();
        unset($columns['date']); 
        $columns['shortcode'] = esc_html__( 'Shortcode', "calculation-forms" );
        $columns['date'] = esc_html__( 'Date');
        return $columns;
    }
    function custom_column( $column, $post_id ) {
        switch ( $column ) {
            case 'shortcode' :
                ?>
               <input type="text" onfocus="this.select();" readonly="readonly" value='[calculation id="<?php echo esc_attr($post_id) ?>" title="<?php echo esc_html(get_the_title( $post_id )) ?>"]' class="large-text code">
                <?php
                break;
        }
    }
    public static function load_text_name($name,$value=""){
        ?>
        <div class="calculation-forms-button-container">
            <input type="text" name="<?php echo esc_attr($name) ?>" value="<?php echo esc_attr($value) ?>" >
            <div class="calculation-forms-button-add-name">{..}</div>
        </div>
        <?php
    }
    function add_lib() {
        $ver = time();
        wp_enqueue_style('calculation_forms_font',CALCULATION_FORMS_PLUGIN_URL."backend/fonts/css/calculationforms.css");
        wp_enqueue_style('calculation_forms', CALCULATION_FORMS_PLUGIN_URL."backend/css/cf-style.css",array("calculation_forms_font"),$ver);   
        wp_enqueue_script('calculation_forms_main', CALCULATION_FORMS_PLUGIN_URL."backend/js/main.js",array("jquery","jquery-ui-core","jquery-ui-sortable","jquery-ui-draggable","jquery-ui-droppable","wp-color-picker"),$ver);
        wp_enqueue_media();
        wp_enqueue_style( 'wp-color-picker' ); 
    }
    function custom_post_type() {
        register_post_type('calculation_forms',
            array(
                'labels'      => array(
                    'name'          => esc_html__( 'Calculation Forms', 'calculation-forms' ),
                    'singular_name' => esc_html__( 'Calculation', 'calculation-forms' ),
                ),
                'public'      => true,
                'has_archive' => true,
                'rewrite'     => array( 'slug' => 'calculation-forms' ),
                'supports'    =>array('title'),
                'menu_icon'   => CALCULATION_FORMS_PLUGIN_URL."backend/images/calculator.svg"
            )
        );
        register_post_type('cf_submissions',
            array(
                'labels'      => array(
                    'name'          => esc_html__( 'Entries', 'calculation-forms' ),
                    'singular_name' => esc_html__( 'Entries', 'calculation-forms' ),
                ),
                'public'      => true,
                'has_archive' => true,
                'rewrite'     => array( 'slug' => 'calculation-forms-submissions' ),
                'supports'    =>array('title'),
                'show_in_menu'=> "edit.php?post_type=calculation_forms",
            )
        );
    }
    function add_meta_boxes() {
        add_meta_box(
            'form-builder-main',
            esc_html__( 'Builder Form', 'calculation-forms' ),
            array( $this, 'form_builder_main' ),
            'calculation_forms',
            'normal',
            'default'
        );
    }
    function form_builder_main($post ) {
        $post_id= $post->ID;
        wp_nonce_field( 'calculation_forms_box_nonce', 'calculation_forms_box_nonce' );
        $mails = get_post_meta( $post_id, '_calculation_form_mails', true );
        $step = get_post_meta( $post_id, '_calculation_forms_multistep_style', true );

        if( !is_array($step) ){
            $step = array("style"=>1,"background"=>"#808080","color"=>"#fff","background_active"=>"#55b776","color_active"=>"#fff","background_completed"=>"#3491C4","color_completed"=>"#fff" );
        }
        $form_data = get_post_meta( $post_id, '_calculation_form', true );
        if( empty($form_data)){
            $form_data = '{"0":{"type":"row1","columns":{"0":{"0":{"data":{"name":{"type":"data","value":"number-1"},"label":{"type":"html","value":"Number 1"},"default":{"type":"input","value":""},"placeholder":{"type":"input","value":""},"format":{"type":"data","value":""},"class":{"type":"class","value":""},"id":{"type":"data","value":""},"required":{"type":"data","value":""},"logic":{"type":"data","value":""}},"type":"number"},"1":{"data":{"name":{"type":"data","value":"number-2"},"label":{"type":"html","value":"Number 2"},"default":{"type":"input","value":""},"placeholder":{"type":"input","value":""},"format":{"type":"data","value":""},"class":{"type":"class","value":""},"id":{"type":"data","value":""},"required":{"type":"data","value":""},"logic":{"type":"data","value":""}},"type":"number"},"2":{"data":{"name":{"type":"data","value":"total-10"},"label":{"type":"html","value":"Total"},"formula":{"type":"data","value":"[number-1]+[number-2]"},"format":{"type":"data","value":""},"shortcode":{"type":"data","value":"total-10"},"class":{"type":"class","value":""},"id":{"type":"data","value":""},"required":{"type":"data","value":""},"logic":{"type":"data","value":""}},"type":"total"},"3":{"data":{"name":{"type":"data","value":"your-name"},"label":{"type":"html","value":"Your Name"},"default":{"type":"input","value":""},"placeholder":{"type":"input","value":""},"class":{"type":"class","value":""},"id":{"type":"data","value":""},"required":{"type":"data","value":"checked"},"logic":{"type":"data","value":"uncheck"}},"type":"text"},"4":{"data":{"name":{"type":"data","value":"your-email"},"label":{"type":"html","value":"Your Email"},"default":{"type":"input","value":""},"placeholder":{"type":"input","value":""},"class":{"type":"class","value":""},"id":{"type":"data","value":""},"required":{"type":"data","value":"checked"},"logic":{"type":"data","value":"uncheck"}},"type":"email"},"5":{"data":{"name":{"type":"data","value":"your-subject"},"label":{"type":"html","value":"Subject"},"default":{"type":"input","value":""},"placeholder":{"type":"input","value":""},"class":{"type":"class","value":""},"id":{"type":"data","value":""},"required":{"type":"data","value":"checked"},"logic":{"type":"data","value":"uncheck"}},"type":"text"},"6":{"data":{"default":{"type":"input","value":"Submit"},"class":{"type":"class","value":""},"id":{"type":"data","value":""},"logic":{"type":"data","value":"uncheck"}},"type":"submit"}}}}}';
        }
        ?>
        <div class="calculation-forms-builder">
            <div class="calculation-forms-tab">
                <ul>
                    <li class="calculation-forms-tab-main-item">
                        <a data-tab=".calculation-forms-content-tab-form" class="active" href="#"><?php esc_html_e("Form","calculation-forms") ?></a>       
                    </li>
                    <li class="calculation-forms-tab-main-item">
                        <a  data-tab=".calculation-forms-content-tab-email"class="" href="#"><?php esc_html_e("Settings","calculation-forms") ?></a>
                        <ul>
                            <li><a  data-tab=".calculation-forms-content-tab-email"class="" href="#"><?php esc_html_e("Email","calculation-forms") ?></a></li>
                            <?php do_action("calculation_forms_tab_settings") ?>
                        </ul>
                    </li>
                    <li class="calculation-forms-tab-main-item">
                        <a data-tab=".calculation-forms-content-tab-messages" href="#"><?php esc_html_e("Messages","calculation-forms") ?></a>
                    </li>
                    <?php do_action("calculation_forms_tab") ?>
                </ul>
                <div class="hr"></div>
            </div>
            <div class="calculation-forms-container">
                <div class="calculation-forms-content-tab calculation-forms-content-tab-form">
                    <div class="cfbuilder-content">
                        <div class="cfbuilder-container-tab">
                            <div class="cfbuilder-content-tab">
                                <div class="calculation-forms-step-header">
                                    <ul>
                                        <li class="active"><a data-id="1" href="#"><?php esc_html_e("Step 1") ?></a></li>
                                        <li><a data-id="0" href="#">+</a></li>
                                    </ul>
                                </div>
                            </div>
                            <div class="calculation-forms-step-container">
                                <div class="calculation-forms-step-tab calculation-forms-step-tab-1">
                                    <div class="cfbuilder-content-body">
                                         <div class="cfbuilder-container-row" data-type="row1">
                                            <div class="cfbuilder-row cfbuilder-row-empty">
                                            </div>
                                         </div>  
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="cfbuilder-sidebar">
                        <div class="header-tool-bar">
                            <div data-tab="cfbuilder-sidebar-data" class="active tool-filed-tab-add tool-filed-tab"><?php esc_html_e("Add Fields","calculation-forms") ?></div>
                            <div data-tab="cfbuilder-sidebar-tool" class="tool-filed-tab-settings tool-filed-tab"><?php esc_html_e("Filed Settings","calculation-forms") ?></div>
                        </div>
                        <div class="cfbuilder-sidebar-data cfbuilder-sidebar-content">
                            <?php 
                            $show = false;
                            if( CALCULATION_FORMS_PREMIUM ) {
                                $check_purchase_code = get_option("_redmuber_item_34591796");
                                if( $check_purchase_code == "ok" ) {
                                    $show = true;
                                }else{
                                echo "<p>".esc_html__("Please enter purchase code","rednumber").": <a href='".admin_url("plugins.php") ."'>".admin_url("plugins.php") ."</a></p>";
                                }
                            }else{
                                $show = true;
                            }
                            if( $show ):
                            ?>
                            <h4 class="active"><?php esc_html_e("Layout","calculation-forms") ?>
                            <i class="calculationform-icon icon-up-open"></i>            
                            </h4>
                            <ul class="cfbuilder-tab-row default_hide">
                                <?php do_action("calculation_form_tab_block_row") ?>
                            </ul>
                            <h4><?php esc_html_e("Common Fields","calculation-forms") ?>
                                <i class="calculationform-icon icon-down-open"></i>             
                            </h4>
                            <ul class="cfbuilder-tab-element">
                                <?php do_action("calculation_form_tab_block_common") ?>
                            </ul>
                            <h4 class="calculationform-last-child"><?php esc_html_e("Advanced Fields","calculation-forms") ?>
                            <i class="calculationform-icon icon-down-open"></i>             
                            </h4>
                            <ul class="cfbuilder-tab-element">
                                <?php do_action("calculation_form_tab_block_advanced") ?>
                            </ul>
                        <?php endif; ?>
                        </div>
                        <div class="cfbuilder-sidebar-tool cfbuilder-sidebar-content hidden">
                            <h3><?php esc_html_e("Type","calculation-forms") ?></h3>
                            <div class="cfbuilder-sidebar-tool-settings">
                            <h4><?php esc_html_e("General","calculation-forms") ?>
                               <i class="calculationform-icon icon-down-open"></i>             
                           </h4>
                            <div class="cfbuilder-sidebar-content-general">
                               <div class="cfbuilder__toolbar_element" id="cfbuilder__toolbar_name">
                                   <label><?php esc_html_e("Field Name","calculation-forms") ?></label>
                                    <input type="text">
                                </div>
                                <div class="cfbuilder__toolbar_element" id="cfbuilder__toolbar_label">
                                   <label><?php esc_html_e("Field Label","calculation-forms") ?></label>
                                    <input type="text">
                                </div>
                                <div class="cfbuilder__toolbar_element" id="cfbuilder__toolbar_default">
                                   <label><?php esc_html_e("Default","calculation-forms") ?></label>
                                    <input type="text">
                                </div>
                                <div class="cfbuilder__toolbar_element" id="cfbuilder__toolbar_default_textarea">
                                   <label><?php esc_html_e("Default","calculation-forms") ?></label>
                                   <select class="cfbuilder__toolbar_element-insert-tag" data-type="all" data-current="false">
                                       <option><?php esc_html_e("Insert Merge Tag","calculation-forms") ?></option>
                                   </select>
                                    <textarea></textarea>
                                </div>
                                <div class="cfbuilder__toolbar_element" id="cfbuilder__toolbar_min">
                                   <label><?php esc_html_e("Min","calculation-forms") ?></label>
                                    <input type="text">
                                </div>
                                 <div class="cfbuilder__toolbar_element" id="cfbuilder__toolbar_max">
                                   <label><?php esc_html_e("Max","calculation-forms") ?></label>
                                    <input type="text">
                                </div>
                                <div class="cfbuilder__toolbar_element" id="cfbuilder__toolbar_from">
                                   <label><?php esc_html_e("From","calculation-forms") ?></label>
                                    <input type="text">
                                </div>
                                <div class="cfbuilder__toolbar_element" id="cfbuilder__toolbar_prefix">
                                   <label><?php esc_html_e("Prefix","calculation-forms") ?></label>
                                    <input type="text">
                                </div>
                                <div class="cfbuilder__toolbar_element" id="cfbuilder__toolbar_postfix">
                                   <label><?php esc_html_e("Postfix","calculation-forms") ?></label>
                                    <input type="text">
                                </div>
                                <div class="cfbuilder__toolbar_element" id="cfbuilder__toolbar_custom_value">
                                   <label><?php esc_html_e("Custom Values","calculation-forms") ?></label>
                                    <textarea placeholder="value1,value2,value3"></textarea>
                                </div>
                                <div class="cfbuilder__toolbar_element" id="cfbuilder__toolbar_choose">
                                   <label><?php esc_html_e("Choices","calculation-forms") ?></label>
                                    <ul class="choose-header choose-tool">
                                        <li>
                                            <div class="choose-conatiner-default"><?php esc_html_e("D","calculation-forms") ?></div>
                                            <div class="choose-conatiner-label"><?php esc_html_e("Label","calculation-forms") ?></div>
                                            <div class="choose-conatiner-value"><?php esc_html_e("Value","calculation-forms") ?></div>
                                            <div class="choose-conatiner-data hidden"><?php esc_html_e("add/remove","calculation-forms") ?></div>
                                            <div class="choose-conatiner-action"><?php esc_html_e("add/remove","calculation-forms") ?></div>
                                        </li>   
                                    </ul>
                                    <ul class="choose-datas choose-tool">
                                    </ul>
                                </div>
                                <div class="cfbuilder__toolbar_element" id="cfbuilder__toolbar_formula">
                                   <label><?php esc_html_e("Formula","calculation-forms") ?></label>
                                   <select class="cfbuilder__toolbar_element-insert-tag" data-type="all" data-current="true">
                                       <option><?php esc_html_e("Insert Merge Tag","calculation-forms") ?></option>
                                   </select> <a href="https://dev.wall-f.com/calculator/?page_id=251" target="_blank" title=""><?php esc_html_e("Read the document","calculation-forms") ?></a>
                                    <textarea></textarea>
                                </div>
                                <div class="cfbuilder__toolbar_element" id="cfbuilder__toolbar_required">
                                   <label><?php esc_html_e("Required","calculation-forms") ?></label>
                                    <input type="checkbox" value="1">
                                </div>
                                <?php if(CALCULATION_FORMS_PREMIUM) {
                                ?>
                                <div class="">
                                    <div class="cfbuilder__toolbar_element" id="cfbuilder__toolbar_number_format">
                                       <label><?php esc_html_e("Number Format","calculation-forms") ?></label>
                                        <select>
                                            <option value=""><?php esc_html_e("None","calculation-forms") ?></option>
                                            <option value="decimal_dot"><?php esc_html_e("9,999.99","calculation-forms") ?></option>
                                            <option value="decimal_comma"><?php esc_html_e("9.999,99","calculation-forms") ?></option>
                                        </select>
                                    </div>
                                    <div class="cfbuilder__toolbar_element" id="cfbuilder__toolbar_number_format_decimal">
                                       <label><?php esc_html_e("Decimal","calculation-forms") ?></label>
                                       <input type="text" value="2">
                                    </div>
                                    <div class="cfbuilder__toolbar_element" id="cfbuilder__toolbar_number_format_symbols">
                                       <label><?php esc_html_e("Symbols","calculation-forms") ?></label>
                                       <input type="text">
                                    </div>
                                    <div class="cfbuilder__toolbar_element" id="cfbuilder__toolbar_number_format_symbols_position">
                                       <label><?php esc_html_e("Symbols position","calculation-forms") ?></label>
                                        <select name="">
                                            <option value="left" selected="selected"><?php esc_html_e("Left","calculation-forms") ?></option>
                                            <option value="right"><?php esc_html_e("Right","calculation-forms") ?></option>
                                        </select>
                                    </div>
                                </div>
                            <?php }else{
                                ?>
                                <div class="cfbuilder__toolbar_element" id="cfbuilder__toolbar_number_format_decimal">
                                   <a href="<?php echo esc_url("https://codecanyon.net/item/calculator-forms-builder/34591796") ?>" target="_blank"><img src="<?php echo esc_url(CALCULATION_FORMS_PLUGIN_URL."backend/images/fromat-pro.png") ?>" alt=""></a>
                                </div>
                                <?php
                            } ?>
                                <div class="cfbuilder__toolbar_element" id="cfbuilder__toolbar_multi-step-remove">
                                   <a href="#" class="button button-primary calculation-forms-remove-step"><?php esc_html_e("Remove Step","calculation-forms") ?></a>
                                </div>
                                <div class="cfbuilder__toolbar_element" id="cfbuilder__toolbar_multi-step-name">
                                   <label><?php esc_html_e("Step Name","calculation-forms") ?></label>
                                   <input type="text" value="Step">
                                </div>
                                <div class="cfbuilder__toolbar_element" id="cfbuilder__toolbar_multi-step-next-button">
                                   <label><?php esc_html_e("Next button","calculation-forms") ?></label>
                                   <input type="text" value="Next">
                                </div>
                                <div class="cfbuilder__toolbar_element" id="cfbuilder__toolbar_multi-step-prev-button">
                                   <label><?php esc_html_e("Previous button","calculation-forms") ?></label>
                                   <input type="text" value="Previous">
                                </div>

                                <div class="cfbuilder__toolbar_element" id="cfbuilder__toolbar_multi-step-type">
                                   <label><?php esc_html_e("Type","calculation-forms") ?></label>
                                   <select name="calculation_forms_multistep_style[style]">
                                        <option <?php selected(1,$step["style"]) ?> value="1"><?php esc_html_e("Style 1","calculation-forms") ?></option>
                                        <option <?php selected(2,$step["style"]) ?>  value="2"><?php esc_html_e("Style 2","calculation-forms") ?></option>
                                        <option <?php selected(3,$step["style"]) ?>  value="3"><?php esc_html_e("Style 3","calculation-forms") ?></option>
                                        <option <?php selected(4,$step["style"]) ?>  value="4"><?php esc_html_e("Style 4","calculation-forms") ?></option>
                                        <option <?php selected(5,$step["style"]) ?>  value="5"><?php esc_html_e("Hide ProgressBar","calculation-forms") ?></option>
                                    </select>
                                </div>
                                <div class="cfbuilder__toolbar_element" id="cfbuilder__toolbar_multi-step-background">
                                   <label><?php esc_html_e("Background","calculation-forms") ?></label>
                                   <input name="calculation_forms_multistep_style[background]" type="text" class="wp_color" value="<?php echo esc_attr($step["background"]) ?>">
                                </div>
                                <div class="cfbuilder__toolbar_element" id="cfbuilder__toolbar_multi-step-color">
                                   <label><?php esc_html_e("Color","calculation-forms") ?></label>
                                   <input name="calculation_forms_multistep_style[color]" type="text" class="wp_color" value="<?php echo esc_attr($step["color"]) ?>">
                                </div>
                                <div class="cfbuilder__toolbar_element" id="cfbuilder__toolbar_multi-step-background-active">
                                   <label><?php esc_html_e("Background active","calculation-forms") ?></label>
                                   <input name="calculation_forms_multistep_style[background_active]" type="text" class="wp_color" value="<?php echo esc_attr($step["background_active"]) ?>">
                                </div>
                                <div class="cfbuilder__toolbar_element" id="cfbuilder__toolbar_multi-step-color-active">
                                   <label><?php esc_html_e("Color active","calculation-forms") ?></label>
                                   <input name="calculation_forms_multistep_style[color_active]" type="text" class="wp_color" value="<?php echo esc_attr($step["color_active"]) ?>">
                                </div>
                                <div class="cfbuilder__toolbar_element" id="cfbuilder__toolbar_multi-step-background-completed">
                                   <label><?php esc_html_e("Background completed","calculation-forms") ?></label>
                                   <input name="calculation_forms_multistep_style[background_completed]" type="text" class="wp_color" value="<?php echo esc_attr($step["background_completed"]) ?>">
                                </div>
                                <div class="cfbuilder__toolbar_element" id="cfbuilder__toolbar_multi-step-color-completed">
                                   <label><?php esc_html_e("Color completed","calculation-forms") ?></label>
                                   <input name="calculation_forms_multistep_style[color_completed]" type="text" class="wp_color" value="<?php echo esc_attr($step["color_completed"]) ?>">
                                </div>

                                
                               <?php do_action("calculation_form_tab_settings_general") ?>
                            </div>
                            <h4 class="calculationform-last-child"><?php esc_html_e("Advanced","calculation-forms") ?>
                               <i class="calculationform-icon icon-up-open"></i>             
                           </h4>
                            <div class="cfbuilder-sidebar-content-advanced default_hide active">
                               <div class="cfbuilder__toolbar_element" id="cfbuilder__toolbar_class">
                                   <label><?php esc_html_e("Class","calculation-forms") ?></label>
                                    <input type="text">
                                </div>
                                <div class="cfbuilder__toolbar_element" id="cfbuilder__toolbar_id">
                                   <label><?php esc_html_e("ID","calculation-forms") ?></label>
                                    <input type="text">
                                </div>
                                <?php do_action("calculation_form_tab_settings_advanced") ?>
                                <div class="cfbuilder__toolbar_element" id="cfbuilder__toolbar_visible">
                                   <label><?php esc_html_e("Visibility","calculation-forms") ?></label>
                                    <select>
                                        <option value="visible" selected="selected"><?php esc_html_e("Visible","calculation-forms") ?></option>
                                        <option value="hidden"><?php esc_html_e("Hidden","calculation-forms") ?></option>
                                    </select>
                                </div>
                                <div class="cfbuilder__toolbar_element" id="cfbuilder__toolbar_logic">
                                   <label><?php esc_html_e("Conditional Logic","calculation-forms") ?></label>
                                    <input class="cfbuilder__toolbar_element_logic_input" data-logic="" data-logic_check="ok" type="checkbox" value="checked">
                                    <button class="cfbuilder__toolbar_element_logic_button"><?php esc_html_e('Edit',"calculation-forms") ?></button>
                                </div>
                            </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="calculation-forms-content-tab calculation-forms-content-tab-email hidden">
                    <h3><?php esc_html_e("Email","calculation-forms") ?></h3>
                    <?php 
                     if( empty($mails)  ){
                            $mails = array("to"=>"[_site_admin_email]",
                                            "from" => "[_site_title] ". get_option("admin_email"),
                                            "subject" =>'[_site_title] "[your-subject]"',
                                            "headers" => "Reply-To: [your-email]",
                                            "body"=>"[all]
-- 
This e-mail was sent from a contact form on [_site_title] ([_site_url])"
                                        );
                     }
                    ?>
                    <ul>
                        <li>
                            <label for=""><?php esc_html_e("To","calculation-forms") ?></label>
                            <input type="text" name="cf_mail[to]" value="<?php echo esc_attr($mails["to"]) ?>">
                        </li>
                        <li>
                            <label for=""><?php esc_html_e("From","calculation-forms") ?></label>
                            <input type="text" name="cf_mail[from]" value="<?php echo esc_attr($mails["from"]) ?>">
                        </li>
                        <li>
                            <label for=""><?php esc_html_e("Subject","calculation-forms") ?></label>
                            <input type="text" name="cf_mail[subject]" value="<?php echo esc_attr($mails["subject"]) ?>">
                        </li>
                        <li>
                            <label for=""><?php esc_html_e("Additional headers","calculation-forms") ?></label>
                            <textarea name="cf_mail[headers]"><?php echo esc_textarea($mails["headers"]) ?></textarea>
                        </li>
                        <li>
                            <label for=""><?php esc_html_e("Message body","calculation-forms") ?></label>
                            <textarea name="cf_mail[body]"><?php echo esc_textarea($mails["body"]) ?></textarea>
                        </li>
                    </ul>
                </div>
                <div class="calculation-forms-content-tab calculation-forms-content-tab-messages hidden">
                    <h3><?php esc_html_e("Messages","calculation-forms") ?></h3>
                    <?php 
                    $data_message = get_post_meta( $post_id, '_calculation_form_messages', true );
                     if( empty($data_message)  ){
                            $data_message = array("mail_sent_ok"=>"Thank you for your message. It has been sent.",
                                            "mail_sent_ng" => "There was an error trying to send your message. Please try again later.",
                                            "validation_error" =>'One or more fields have an error. Please check and try again.',
                                            "accept_terms" => "You must accept the terms and conditions before sending your message.",
                                            "invalid_required" => "The field is required.",
                                        );
                     }
                    ?>
                    <ul>
                        <li>
                            <label for=""><?php esc_html_e("Sender's message was sent successfully","calculation-forms") ?></label>
                            <input type="text" name="cf_message[mail_sent_ok]" value="<?php echo esc_attr($data_message["mail_sent_ok"]) ?>">
                        </li>
                        <li>
                            <label for=""><?php esc_html_e("Sender's message failed to send","calculation-forms") ?></label>
                            <input type="text" name="cf_message[mail_sent_ng]" value="<?php echo esc_attr($data_message["mail_sent_ng"]) ?>">
                        </li>
                        <li>
                            <label for=""><?php esc_html_e("Validation errors occurred","calculation-forms") ?></label>
                            <input type="text" name="cf_message[validation_error]" value="<?php echo esc_attr($data_message["validation_error"]) ?>">
                        </li>
                        <li>
                            <label for=""><?php esc_html_e("There are terms that the sender must accept","calculation-forms") ?></label>
                            <input type="text" name="cf_message[accept_terms]" value="<?php echo esc_attr($data_message["accept_terms"]) ?>">
                        </li>
                        <li>
                            <label for=""><?php esc_html_e("There is a field that the sender must fill in","calculation-forms") ?></label>
                            <input type="text" name="cf_message[invalid_required]" value="<?php echo esc_attr($data_message["invalid_required"]) ?>">
                        </li>
                    </ul>
                </div>
                <?php do_action("calculation_forms_tab_page",$post) ?>
            </div>
            <div class="cfbuilder-popup hidden">
                <div class="cfbuilder-popup-header">
                    <div class="cfbuilder-close-locgic">X</div>
                    <h3><?php esc_html_e("Configure Conditional Logic","calculation-forms") ?></h3>
                    <div class="cfbuilder-popup-des">
                        <?php esc_html_e("Conditional logic allows you to change what the user sees depending on the fields they select.","calculation-forms") ?>
                    </div>
                    <div>
                        <?php esc_html_e("Enable Conditional Logic","calculation-forms"); ?>
                        <input id="calculation-forms-logic-enable" data-logic_check="ok" type="checkbox" value="checked">
                    </div>
                </div>
                <div class="cfbuilder-popup-content">
                        <select name="" id="calculation-forms-logic-type">
                            <option value="show"><?php esc_html_e("Show","calculation-forms") ?></option>
                            <option value="hide"><?php esc_html_e("Hide","calculation-forms") ?></option>
                        </select>
                        <?php esc_html_e(" this field if","calculation-forms") ?>
                        <select name="" id="calculation-forms-logic-logic">
                            <option value="all"><?php esc_html_e("All","calculation-forms") ?></option>
                            <option value="any"><?php esc_html_e("Any","calculation-forms") ?></option>
                        </select>
                        <?php esc_html_e("of the following match:","calculation-forms") ?>
                        <div class="cfbuilder-popup-layout" >
                            <div class="calculation-forms-logic-item" id="cfbuilder-popup-layout-data">
                                <select class="calculation-forms-logic-name">
                                    <option value="">Name 1</option>
                                </select>
                                <select >
                                    <option value="is" selected="selected"><?php esc_html_e("is","calculation-forms") ?></option>
                                    <option value="isnot"><?php esc_html_e("is not","calculation-forms") ?></option>
                                    <option value=">"><?php esc_html_e("greater than","calculation-forms") ?></option>
                                    <option value="<"><?php esc_html_e("less than","calculation-forms") ?></option>
                                    <option value="contains"><?php esc_html_e("contains","calculation-forms") ?></option>
                                    <option value="starts_with"><?php esc_html_e("starts with","calculation-forms") ?></option>
                                    <option value="ends_with"><?php esc_html_e("ends with","calculation-forms") ?></option>
                                </select>
                                <input type="text" name="">
                                <div class="cfbuilder-popup-layout-settings">
                                    <button class="cfbuilder-popup-add">+</button>
                                    <button class="cfbuilder-popup-minus">-</button>
                                </div>
                            </div>
                        </div>
                    </div>
            </div>
        </div>
        <textarea name="calculation_forms" id="calculation_forms_data" class="hidden" > <?php echo esc_textarea($form_data)  ?></textarea>
        <script type="text/javascript">
            <?php
                $data =array(); 
                $datas = apply_filters("calculation_form_block_html",$data);
            ?>
            var calculation_forms = <?php echo wp_json_encode($datas) ?>
        </script>
    <?php
  }
  public function save( $post_id ) {
        /*
         * We need to verify this came from the our screen and with proper authorization,
         * because save_post can be triggered at other times.
         */
        // Check if our nonce is set.
        if ( ! isset( $_POST['calculation_forms_box_nonce'] ) ) {
            return $post_id;
        }
        $nonce = $_POST['calculation_forms_box_nonce'];
        // Verify that the nonce is valid.
        if ( ! wp_verify_nonce( $nonce, 'calculation_forms_box_nonce' ) ) {
            return $post_id;
        }
        /*
         * If this is an autosave, our form has not been submitted,
         * so we don't want to do anything.
         */
        if ( defined( 'DOING_AUTOSAVE' ) && DOING_AUTOSAVE ) {
            return $post_id;
        }
        // Check the user's permissions.
        if ( 'page' == $_POST['post_type'] ) {
            if ( ! current_user_can( 'edit_page', $post_id ) ) {
                return $post_id;
            }
        } else {
            if ( ! current_user_can( 'edit_post', $post_id ) ) {
                return $post_id;
            }
        }
        /* OK, it's safe for us to save the data now. */
        // Sanitize the user input.
        $cf_mail = array();
        $message = array();
        if( isset( $_POST['cf_mail'] ) && is_array($_POST['cf_mail'])){
            foreach( $_POST['cf_mail'] as $key => $value ) {
                $key = sanitize_key($key); 
                $cf_mail[$key] = ($value); 
            }
        }
        if( isset( $_POST['cf_message'] ) && is_array($_POST['cf_message'])){
            foreach( $_POST['cf_message'] as $key => $value ) { 
                $key = sanitize_key($key); 
                $message[$key] = ($value); 
            }
        }
        $calculation_forms = $_POST['calculation_forms'];
        // Update the meta field.
        update_post_meta( $post_id, '_calculation_form_mails', $cf_mail );
        update_post_meta( $post_id, '_calculation_form_messages', $message ); 
        update_post_meta( $post_id, '_calculation_form', $calculation_forms );
        update_post_meta( $post_id, '_calculation_forms_multistep_style', $_POST["calculation_forms_multistep_style"] );
    }
}
new Calculation_Froms_Backend;
    (function($) {
    "use strict";
    $( document ).ready( function () { 
        var calculation_forms_check_save = false;
        $('body').on("click",".calculation-forms-tab a",function(e){
            e.preventDefault();
            $(".calculation-forms-tab a").removeClass("active");
            $(this).addClass("active");
            $(this).closest(".calculation-forms-tab-main-item").children().addClass("active");
            var tab = $(this).data("tab");
            $(".calculation-forms-content-tab").addClass("hidden");
            $(tab).removeClass("hidden");
         })
        $('body').on("click",".cfbuilder-sidebar-data h4, .cfbuilder-sidebar-tool-settings h4",function(e){
            e.preventDefault();
            $(this).toggleClass("active");
            $(this).next().slideToggle('normal');
            if( $(this).hasClass("active")){
                $(this).find("i").removeClass("icon-down-open").addClass("icon-up-open");
            }else{
                $(this).find("i").removeClass("icon-up-open").addClass("icon-down-open");
            }
         })
        $('body').on("click",".cfbuilder-close-locgic",function(e){
            e.preventDefault();
            $(this).closest(".cfbuilder-popup").addClass("hidden");
         })
        $('body').on("click",".tool-filed-tab",function(e){
            e.preventDefault();
            $(".cfbuilder-sidebar-content").addClass("hidden");
            var tab = $(this).data("tab");
            $(".tool-filed-tab").removeClass('active');
            $(this).addClass("active");
            $("."+tab).removeClass("hidden");
            if( tab == "cfbuilder-sidebar-tool" && $(".cfbuilder-field.cfbuilder_active").length < 1){
                $(".cfbuilder-sidebar-tool").addClass("hidden");
            }
         })
        $('body').on("click",".calculation-forms-button-add-name",function(e){
            e.preventDefault();
            var html ="<option>Choose</option>";
            $(".cfbuilder-field input, .cfbuilder-field textarea, .cfbuilder-field select").each(function( index ) {
                var name = $(this).attr("name");
                html +='<option value="'+name+'">'+name+'</option>';
            });
            $(this).closest(".calculation-forms-button-container").find("select").remove();
            $(this).closest(".calculation-forms-button-container").append('<select class="calculation-forms-button-add-select">'+html+'</select');
         })
        $('body').on("change",".calculation-forms-button-add-select",function(e){
            var value = $(this).closest(".calculation-forms-button-container").find("input").val();
            value += $(this).val();
            $(this).closest(".calculation-forms-button-container").find("input").val(value);
            $(this).remove();
         })
        $('body').on("click","#calculation-forms-logic-enable",function(e){
            if( $(this).is(':checked') ){
                $(".cfbuilder-popup-content").removeClass("hidden");
                $(".cfbuilder__toolbar_element_logic_input").prop("checked",false);
            }else{
                $(".cfbuilder-popup-content").addClass("hidden");
                $(".cfbuilder__toolbar_element_logic_input").prop("checked",true);
            }
            $('.cfbuilder__toolbar_element_logic_input').trigger("click");
         })
        $('body').on("click",".cfbuilder__toolbar_element_logic_button",function(e){
            e.preventDefault();
            e.stopPropagation();
            $('html, body').animate({
                scrollTop: $("#form-builder-main").offset().top
            }, 500);
            var html ='';
            $(".cfbuilder-popup").toggleClass("hidden");
            var datas = $(".cfbuilder__toolbar_element_logic_input").data("logic");
            if( $(".cfbuilder__toolbar_element_logic_input").is(':checked') ){ 
                $("#calculation-forms-logic-enable").prop("checked",false);
            }else{
                $("#calculation-forms-logic-enable").prop("checked",true);
            }
            $('#calculation-forms-logic-enable').trigger("click");
            if( datas == ""){
                html = $.cfbuilder_get_logic_html({"name":"","rule":"is","value":""});
            }else{
                 datas= JSON.parse(decodeURIComponent(datas));
                 var type = datas.type;
                 $("#calculation-forms-logic-type").val(datas.type);
                 $("#calculation-forms-logic-logic").val(datas.logic);
                 $.each(datas.conditional, function( index, data ) {
                 html += $.cfbuilder_get_logic_html(data);
                });
            }
            $(".cfbuilder-popup-layout").html(html);
         })
        $.cfbuilder_get_logic_html = function(conditional){
            var names = $.cfbuilder_get_all_name();
            var name_logic_html = "";
            $.each(names, function( index, name ) {
                var selected_s = "";
                if( conditional.name == name ){
                    selected_s = 'selected';
                }
                name_logic_html += '<option '+selected_s+' value="'+name+'">'+name+'</option>';
            });
            var rules ={"is":"is","isnot":"is not",">":"greater than","<":"less than","contains":"contains","starts_with": "starts with","ends_with":"ends with"};
            var html = '<div class="calculation-forms-logic-item" >';
                html += '<select class="calculation-forms-logic-name">';
                        html += name_logic_html;
                    html += '</select>';
                    html += '<select class="calculation-forms-logic-rule">';
                    $.each(rules, function( key, rule ) {
                        var selected_s = "";
                        if( conditional.rule == key ){
                            selected_s = 'selected';
                        }
                        html += '<option '+selected_s+' value="'+key+'">'+rule+'</option>';
                    });
                    html += '</select>';
                    html += '<input type="text" class="calculation-forms-logic-value" value="'+conditional.value+'">';
                    html += '<div class="cfbuilder-popup-layout-settings">';
                        html += '<button class="cfbuilder-popup-add">+</button>';
                        html += '<button class="cfbuilder-popup-minus">-</button>';
                    html += '</div>';
                html += '</div>';
                return html;
        }
        $('body').on("change",".cfbuilder-popup-content select",function(e){
            $.cfbuilder_change_logic();
         })
        $('body').on("keyup",".cfbuilder-popup-content input",function(e){
            $.cfbuilder_change_logic();
         })
        $('body').on("click",".cfbuilder-popup-layout-settings .cfbuilder-popup-add",function(e){
            e.preventDefault();
            var data = $(this).closest(".calculation-forms-logic-item").clone();
            $(this).closest(".cfbuilder-popup-layout").append(data);
            $(this).closest(".cfbuilder-popup-layout").find('input').first().keyup();
         })
        $('body').on("click",".cfbuilder-popup-layout-settings .cfbuilder-popup-minus",function(e){
            e.preventDefault();
            var count_opt = $(this).closest(".cfbuilder-popup-layout").find(".calculation-forms-logic-item").length;
            if( count_opt < 2 ){
                alert("You should disable conditional logic");
            }else{
               $(this).closest(".calculation-forms-logic-item").remove();
               $(this).closest(".cfbuilder-popup-layout").find('input').first().keyup();
            }
         })
        $.cfbuilder_change_logic = function(){
            var type = $("#calculation-forms-logic-type").val();
            var logic = $("#calculation-forms-logic-logic").val();
            var conditional = [];
            $(".calculation-forms-logic-item").each(function() {
                var name = $(this).find(".calculation-forms-logic-name").val();
                var rule = $(this).find(".calculation-forms-logic-rule").val();
                var value = $(this).find(".calculation-forms-logic-value").val();
                conditional.push({name: name,rule: rule, value: value});
            });
            var data = {"type":type,"logic":logic,"conditional":conditional};
            var data = encodeURIComponent(JSON.stringify(data));
            $(".cfbuilder__toolbar_element_logic_input").data("logic",data).change();
        }
         $.cfbuilder_load_type = function (type,elements,email) { 
             var html = $(calculation_forms["block"][type]["builder"]); 
             return $(html);
          }
        $.fn.cfbuilder_row_droppable = function () { 
            $(this).draggable({
              helper: function () {
                    var type = $(this).data("type");
                    var html = $.cfbuilder_load_type(type);
                    html.find(".cfbuilder-row").addClass("builder-row-empty");
                    html.find(".cfbuilder-row").cfbuilder_element_sortable();
                    return html.removeAttr('style').css({width: 'auto',height: 'auto'});
                },  
              start: function (e, ui) {
                  ui.helper.addClass('cfbuilderemail-temp');
              },
              stop: function (e, ui) {
                 ui.helper.removeClass('cfbuilderemail-temp');
                 $.cfbuilder_remove_empty();
              },
              cursorAt: {left: 40, top: 15},
              connectToSortable: ".cfbuilder-content-body",
              revert : 0,
            });
        }
         $.fn.cfbuilder_row_sortable = function () {
            $(this).sortable({
              revert: "invalid",
              placeholder: 'cfbuilder-row-insert',
              start: function (ev, ui) {
                  ui.helper.addClass('cfbuider-email-dragging');
              },
              stop: function (ev, ui) {  
                  ui.item.removeClass('cfbuider-email-dragging');
                  $.cfbuilder_remove_empty();
              },
              handle: ".cfDragHandle",
              revert : 0,
            });
        }
        $.fn.cfbuilder_element_droppable = function () { 
            $(this).draggable({
              helper: function () {
                    var type = $(this).data("type");
                    $( this ).removeClass('cfbuilder-row-empty');
                    var html = $.cfbuilder_load_type(type);
                    return html.removeAttr('style').css({width: 'auto',height: 'auto'});
                },
              cursor: "move",
              cancel: ".disable-sort-item",
              cursorAt: {left: 40, top: 15},
              start: function (e, ui) {
                  ui.helper.addClass('cfbuilderemail-temp');
              },
              stop: function (e, ui) {
                 ui.helper.removeClass('cfbuilderemail-temp');
                 $.cfbuilder_remove_empty();
              },
              connectToSortable: ".cfbuilder-row",
              revert : 0,
              cursorAt: {left: 40, top: 15},
            });
        }
        $.fn.cfbuilder_element_sortable = function () { 
            $(this).sortable({
              connectWith: '.cfbuilder-row',
              revert: "invalid",
              placeholder: 'cfbuilder-row-insert',
              column: '',
              tolerance: "pointer",
              handle: ".cfDragHandle",
              revert : 0,
              start: function (ev, ui) {
                    ui.helper.addClass('cfbuider-email-dragging');
                    this.column = ui.helper.closest('.builder-row');
                },
              stop: function (ev, ui) { 
                ui.item.removeClass('cfbuider-email-dragging');
                if (ui.item.closest(".cfbuilder-row").find('.cfbuilder-elements').length) {
                    ui.item.closest(".cfbuilder-row").removeClass('cfbuilder-row-empty');
                }
                if (!(this.column.find('.cfbuilder-elements').length)) {
                    this.column.addClass('cfbuilder-row-empty');
                }
              },
            });
        }
        $( ".cfbuilder-content-body" ).cfbuilder_row_sortable();
        $( ".cfbuilder-tab-row li" ).cfbuilder_row_droppable();
        $( ".cfbuilder-tab-element li" ).cfbuilder_element_droppable();
        $( ".cfbuilder-row" ).cfbuilder_element_sortable(); 
        $('body').on("click",".cfbuilder-container-row",function(e){
            e.preventDefault();
            var toolbar= $('<div class="cfbuilder__toolbar">' +
            '<div class="cfDragHandle"><i class="calculationform-icon icon-menu"></i></div>' +
            '<div class="cfEdit"><i class="calculationform-icon icon-pencil"></i></div>' +
            '<div class="cfDuplicate"><i class="calculationform-icon icon-docs"></i></div>' +
            '<div class="cfDelete"><i class="calculationform-icon icon-trash-empty"></i></div>' +
            '</div>');
            $(this).append(toolbar);
            $(".cfbuilder-container-row").removeClass("cfbuilder_active");
            $(this).addClass("cfbuilder_active");
         })
        $("body").on('mouseenter', '.cfbuilder-container-row', function() {
           $(this).addClass('cfbuilder_hover');
        });
        $("body").on('mouseleave', '.cfbuilder-container-row', function() {
            $(this).removeClass('cfbuilder_hover');
        });
        $('body').on("click",".cfbuilder-container-row",function(e){ 
        })
        $(window).on("click.Bst", function(event){       
                    if ( 
            $(".calculation-forms-builder").has(event.target).length == 0 //checks if descendants of $box was clicked
            &&
            !$(".calculation-forms-builder").is(event.target) //checks if the $box itself was clicked
          ){
                        $("div").remove(".cfbuilder__toolbar");
                        $("div").removeClass("cfbuilder_active");
                        $(".cfbuilder-sidebar-tool").addClass("hidden");
                        $(".cfbuilder-sidebar-data").removeClass("hidden");
                    } else {
                    }
            });
        $('body').on("click",".cfbuilder-field",function(e){ 
            e.preventDefault();
             e.stopPropagation();
            $(".cfbuilder__toolbar").remove();
            var toolbar= $('<div class="cfbuilder__toolbar">' +
            '<div class="cfDragHandle"><i class="calculationform-icon icon-menu"></i></div>' +
            '<div class="cfEdit"><i class="calculationform-icon icon-pencil"></i></div>' +
            '<div class="cfDuplicate"><i class="calculationform-icon icon-docs"></i></div>' +
            '<div class="cfDelete"><i class="calculationform-icon icon-trash-empty"></i></div>' +
            '</div>');
            $(this).append(toolbar);
            $(".cfbuilder-field").removeClass("cfbuilder_active");
            $(this).addClass("cfbuilder_active");
            $(".cfbuilder-sidebar-data").addClass("hidden");
            $(".tool-filed-tab-settings").click();
            $(this).cfbuilder_load_editor();
            $.cfbuilder_update_merge_tag();
        })
        $('body').on("keyup",".cfbuilder-sidebar-tool input, .cfbuilder-sidebar-tool textarea",function(e){ 
            e.preventDefault();
            e.stopPropagation();
            $(this).cfbuilder_set_element();
        })
        $('body').on("change",".cfbuilder-sidebar-tool input:checkbox, .cfbuilder-sidebar-tool select, .cfbuilder-sidebar-tool input:radio",function(e){ 
            e.preventDefault();
            e.stopPropagation();
            $(this).cfbuilder_set_element();
        })
        $.fn.cfbuilder_set_element = function(){
            var data = $(this).val();
            var element = $(".cfbuilder-field.cfbuilder_active");
            if( element.length < 1 ){
                //set step 
                var step = $(".calculation-forms-step-header li.active");
                if( step.length > 0 ){
                    var style = $("#cfbuilder__toolbar_multi-step-type select").val();
                    var step_name = $("#cfbuilder__toolbar_multi-step-name input").val();
                    var step_next = $("#cfbuilder__toolbar_multi-step-next-button input").val();
                    var prev_next = $("#cfbuilder__toolbar_multi-step-next-button input").val();
                    $(".calculation-forms-step-header li.active a").html(step_name);
                    $(".calculation-forms-step-tab:not(.hidden)").data("next",step_next);
                    $(".calculation-forms-step-tab:not(.hidden)").data("name",step_name);
                    $(".calculation-forms-step-tab:not(.hidden)").data("prev",prev_next);
                }
                return;
            }
            var type = element.data("type");
            var data_attrs = calculation_forms["block"][type]["data"];
            var type_tool = $(this).attr("type");
            if( $(this).closest(".cfbuilder__toolbar_element").data("name") == 'choose'){
                type_tool = "choose";
            }
            var key = $(this).closest(".cfbuilder__toolbar_element").attr("data-name");
            var elm = data_attrs[key]["element"];
            var elm_type = data_attrs[key]["type"];
            switch ( type_tool){
                case "checkbox":
                    if( $(this).data("logic_check") == "ok" ){
                        if( $(this).is(':checked')) {
                            data = $(this).data("logic");
                        }else{
                            data = "uncheck";
                        }  
                     }else{
                        if( $(this).is(':checked')) {
                            data = "checked";
                        }else{
                            data = "uncheck";
                        }   
                     }    
                    break;
                case "choose":
                    var data_arr = [];
                    var i = 0;
                    $($(this).closest(".cfbuilder__toolbar_element").find("li")).each(function(){
                        if(i != 0){
                            if( $(this).find(".choose-default").is(":checked")){
                               var default_check= "checked";
                            }else{
                                var default_check ="";
                            }
                            var label = $(this).find(".choose-label").val();
                            var value = $(this).find(".choose-value").val();
                            var data = $(this).find(".choose-data").val();
                            var key_array = i - 1;
                          data_arr.push({"default_check":default_check,"label":label,"value": value,"data":data});
                        }
                        i++;
                    });
                    data = encodeURIComponent(JSON.stringify(data_arr));
                    break;
            }
            switch( elm_type ) {
                case "input":
                    element.find(elm).val(data);
                    break;
                case "html":
                    element.find(elm).html(data);
                    break;
                case "class":
                    element.find(elm).attr("data-class",data);
                    break;
                case "data":
                    element.find(elm).attr(data_attrs[key]["data"],data);
                    switch ( type ) {
                        case "select":
                        case "checkbox":
                        case "radio":
                            if( key == "choose" ){
                                var data_selects= JSON.parse(decodeURIComponent(data));
                                var options ="";
                                $.each(data_selects, function(index, data_select) {
                                    var selected ="";
                                    if( data_select.default_check== "checked"){
                                        selected = 'selected';
                                    }
                                    if( type =="select" ){
                                        options += '<option '+selected+' value="'+data_select.value+'">'+data_select.label+'</option>';
                                    } else if( type == "checkbox"){
                                        options += '<div class="cfbuilder-field-checkbox-inner"><input '+data_select.default_check+' type="checkbox" > <label for="">'+data_select.label+'</label></div>';
                                    }else if( type == "radio" ){
                                       options += '<div class="cfbuilder-field-radio-inner"><input '+data_select.default_check+' type="radio" > <label for="">'+data_select.label+'</label></div>';
                                    }
                                });
                                element.find(elm).html(options);
                            }
                            break;
                    }
                    //checkbox and radio add name
                    if( key == "name"){ 
                        if (type == "checkbox" || type == "radio") {
                           builder_element.find(elm).find("input").attr("name",value_el_inner);  
                           element.find(elm).find("input").attr('name',data);
                        }
                    }   
                    break;
                default:
                    element.find(elm).attr(elm_type,data);
                    break;
            }   
        }
        $('body').on("click",".cfDelete",function(e){
             e.preventDefault();
             e.stopPropagation();
             $(".cfbuilder-sidebar-tool").addClass('hidden');
             $(".cfbuilder-sidebar-data").removeClass('hidden');
             $(".tool-filed-tab-add").click();
             if(  $(this).closest(".cfbuilder-field").length < 1 ){
                $(this).closest(".cfbuilder-container-row").remove();
             }else{
                $(this).closest('.cfbuilder-field').remove();
             }
        })
        $('body').on("click",".cfDuplicate",function(e){
             e.preventDefault();
             e.stopPropagation();
             if(  $(this).closest(".cfbuilder-field").length > 0 ){
                var main_item = $(this).closest('.cfbuilder-field');
                var newItem = main_item.clone(true).removeClass("cfbuilder_active");
                newItem.find(".cfbuilder__toolbar").remove();
                main_item.after(newItem);
             }else{
                var main_item = $(this).closest('.cfbuilder-container-row');
                var newItem = main_item.clone(true).removeClass("cfbuilder_active").find(".cfbuilder-field").removeClass("cfbuilder_active");
                newItem.find(".cfbuilder__toolbar").remove();
                main_item.after(newItem);
             }   
        })
        $('body').on("click",".choices-add",function(e){
             e.preventDefault();
             e.stopPropagation();
             var data = $(this).closest("li").clone().html();
             $(this).closest("ul").append("<li>"+data+"</li>");
              $(this).closest("ul").find("[type=text]").first().keyup();
        })
        $('body').on("click",".choices-minus",function(e){
             e.preventDefault();
             e.stopPropagation();
             var count_opt = $(this).closest("ul").find("li").length;
             if( count_opt <2 ){
                alert("required 1 option");
             }else{
                $(this).closest("li").remove();
                $(this).closest("ul").find("[type=text]").first().keyup();
             }
        })
   $( 'body.post-type-calculation_forms #publish' ).click(function(){
        calculation_forms_check_save = false;
        var data = $.cfbuilder_save();
        $("#calculation_forms_data").val(data);
        if(calculation_forms_check_save){
           return false; 
        }
    });
$.load_builder_form = function(){
        var html = "";
        var data_json = $("#calculation_forms_data").val();
        if( data_json =="" || typeof data_json === "undefined"){
                   return;
                }
        var content = JSON.parse(data_json);
        var steps = {};
        if (typeof content[0]["name"] === "undefined") {
             steps[0]= {"name":"Step","next":"Next","prev":"Previous","datas":content};
        }else{
            steps =content;
        }
        var headers ="";
        var html = $("<div class='cfbuilder-content-body-container'></div>");
        var i_step = 0;
        var i_class ="";
        var content_class ="";
        $.each(steps, function(step_id, step) { 
            var datas = step["datas"];
            if( i_step == 0 ){
                i_class = "active";
            }else{
                content_class = "hidden";
                i_class ="";
            }
            i_step++;
            headers +='<li class="'+i_class+'" ><a data-id="'+( step_id + 1)+'" href="#">'+step["name"]+'</li>';
            var html_step =$('<div data-name="'+step["name"]+'" data-next="'+step["next"]+'" data-prev="'+step["prev"]+'" class="calculation-forms-step-tab calculation-forms-step-tab-'+( step_id + 1)+' '+content_class+'"></div>');
            var html_container =$('<div class="cfbuilder-content-body"></div>');
            console.log(step);
            $.each(datas, function(index, value) {
                var type = value["type"];
                var builder_row = $(calculation_forms["block"][type]["builder"]);
                var eq = 0;
                 $.each(value["columns"], function(index1, value1) { 
                        var col = builder_row.find(".cfbuilder-row:eq("+0+")");
                        $.each(value1, function(index2, value2) {
                            var type_el = value2["type"];
                            var builder_element = $(calculation_forms["block"][type_el]["builder"]);
                            var datas = value2["data"];
                            var data_attrs = calculation_forms["block"][type_el]["data"];
                            $.each(datas, function(index3, value3){
                                var type_el_inner = value3["type"];
                                var value_el_inner = value3["value"];
                                if (index3 in data_attrs) {
                                     var elm = data_attrs[index3]["element"];   
                                }else{
                                    return;
                                }
                                switch( type_el_inner ) {
                                    case "input":
                                    case "textarea":
                                        builder_element.find(elm).val(value_el_inner);
                                        break;
                                    case "html":
                                        builder_element.find(elm).html(value_el_inner);
                                        break;
                                    case "class":
                                         builder_element.find(elm).attr("data-class",value_el_inner);
                                        break;
                                    case "data":
                                        builder_element.find(elm).attr(data_attrs[index3]["data"],value_el_inner);
                                        switch( type_el){
                                            case "select":
                                            case "checkbox":
                                            case "radio":
                                                if( index3 == "choose"){
                                                    var data_selects= JSON.parse(decodeURIComponent(value_el_inner));
                                                    var options ="";
                                                    $.each(data_selects, function(index, data_select) {
                                                        var selected ="";
                                                        if( data_select.default_check== "checked"){
                                                            selected = 'selected';
                                                        }
                                                        if( type_el == "select" ){
                                                          options += '<option '+selected+' value="'+data_select.value+'">'+data_select.label+'</option>';  
                                                        }else if( type_el == "checkbox" ){
                                                           options += '<div class="cfbuilder-field-checkbox-inner"><input name="'+datas["name"]["value"]+'" '+data_select.default_check+' type="checkbox" > <label for="">'+data_select.label+'</label></div>';
                                                        }else if( type_el == "radio" ){
                                                           options += '<div class="cfbuilder-field-radio-inner"><input name="'+datas["name"]["value"]+'" '+data_select.default_check+' type="radio" > <label for="">'+data_select.label+'</label></div>';
                                                        }
                                                    });
                                                    builder_element.find(elm).html(options);
                                                }
                                                break;
                                        }
                                        break;
                                    default:
                                        builder_element.find(elm).attr(type_el,value_el_inner);
                                        break;
                                }
                            })
                            col.append(builder_element);
                        });
                         builder_row.append(col).find("div").removeClass("cfbuilder-row-empty");
                         eq++;
                 });
                 html_container.append(builder_row);
                 html_step.append(html_container);
            });
            html.append(html_step);
        })
        html.find(".cfbuilder-content-body").cfbuilder_row_sortable();
        html.find( ".cfbuilder-row" ).cfbuilder_element_sortable();
        headers +='<li><a data-id="0" href="#">+</a></li>';
        $(".calculation-forms-step-header ul").html(headers);
        $(".calculation-forms-step-container").html(html);         
   };
$.load_builder_form();
   $.cfbuilder_save = function(){
        var tabs ={};
        $(".calculation-forms-step-tab").each(function(tab_index,tab){
             var datas = {};
             var names = [];
            $(tab).find(".cfbuilder-container-row").each(function(index,row){
                var type = $(this).data("type");
                datas[index] = {type: type, columns: {}};
                $(row).find(".cfbuilder-row").each(function(index1,row1){
                    datas[index]["columns"][index1]={};             
                    $(row1).find(".cfbuilder-field").each(function(index2,row2){
                      var field = $(this);
                      var type_el = $(row2).data("type");
                    var data = calculation_forms["block"][type_el]["data"];
                      datas[index]["columns"][index1][index2]= {};
                      datas[index]["columns"][index1][index2]["data"]= {};
                      datas[index]["columns"][index1][index2]["type"]= type_el;
                      $.each(data, function( index3, value3 ) {
                         var type_el_inner = value3["type"];
                         var data_el_inner = value3["element"];
                         var data_value = "";
                         if(index3 == "name"){
                            var name = field.find(data_el_inner).attr("name");
                            if( name !== undefined ){
                                if( !names.includes(name) ){
                                    names.push(name);
                                }else{
                                   alert("Double Name: " + name);
                                   calculation_forms_check_save = true;
                                }
                            }
                         }
                         switch( type_el_inner ) {
                            case "input":
                            case "textarea":
                               data_value = field.find(data_el_inner).val();
                                break;
                            case "html":
                                data_value = field.find(data_el_inner).html();
                                break;
                            case "data":
                                data_value = field.find(data_el_inner).attr(value3["data"]);
                                break;
                            case "class":
                                data_value = field.find(data_el_inner).attr("data-class");
                             case "id":
                                data_value = field.find(data_el_inner).attr("id");
                                break;
                            default:
                                data_value = field.find(data_el_inner).attr(type_el_inner);
                                break;
                         }
                         if( data_value == undefined ){
                            data_value = "";
                         }
                         datas[index]["columns"][index1][index2]["data"][index3] = {"type":type_el_inner,"value":data_value};
                        });
                    });
                    }); 
            })
            var tab_name = $(this).data("name");
            var tab_prev = $(this).data("prev");
            var tab_next = $(this).data("next");
            if (typeof tab_name === "undefined") {
                tab_name = "Step";
            }
            if (typeof tab_prev === "undefined") {
                tab_prev = "Previous";
            }
            if (typeof tab_next === "undefined") {
                tab_next = "Next";
            }
            tabs[tab_index] = {"name":tab_name,"next":tab_next,"prev":tab_prev,"datas":datas};
        })
        return JSON.stringify(tabs);
   }
        $.fn.cfbuilder_load_editor = function(){
            var type = $(this).data("type");
            var element = (this);
            var data_attrs = calculation_forms["block"][type]["data"];
            //Show eidtor
            $(".cfbuilder__toolbar_element").addClass("hidden");
            $(".cfbuilder-sidebar-tool h3").html(type);
             $.each( data_attrs, function( key, value ) {
                //show
                $(value["tool"]).removeClass("hidden");
                $(value["tool"]).attr("data-name",key);
                var data_value = element.cfbuilder_get_element(key,value);
                $.cfbuilder_set_tool(value["type_tool"],value["tool"],data_value);
            }); 
        }
        $.fn.cfbuilder_get_element = function(name,data_attrs){
            var value = "";
            var type = data_attrs["type"];
            var data_class = data_attrs["element"];
            switch (type) {
                case "html":
                    value = $(this).find(data_class).html();
                    break;
                case "input":
                    value = $(this).find(data_class).val();
                    break;
                case "class":    
                    value = (this).find(data_class).attr("data-class");  
                    break;
                case "id":
                    value = (this).find(data_class).attr("id");    
                    break;
                case "placeholder":
                    value = (this).find(data_class).attr("placeholder");  
                    break;
                case "data":
                    value = (this).find(data_class).attr(data_attrs["data"]);  
                    break;
            }
            return value;
        }
        $.cfbuilder_set_tool = function(type,data_id,value){
            switch (type){
                case "text":
                    $(data_id).find("input").val(value);
                    break;
                case "textarea":
                    $(data_id).find("textarea").val(value);
                    break;
                case "checkbox":
                    if( value == "checked" ){
                        $(data_id).find("input").prop('checked', true);
                    }else{
                        $(data_id).find("input").prop('checked', false);
                    }
                    break;
                case "radio":
                    $(data_id).find("input[value="+value+"]").prop('checked', true);
                    break;
                case "select":
                    $(data_id).find("select").val(value);
                    break;
                case "choose":
                    var data_selects= JSON.parse(decodeURIComponent(value));
                        var options ="";
                        $.each(data_selects, function(index, data_select) {
                            var selected ="";
                            if( data_select.default_check== "checked"){
                                selected = 'checked';
                            }
                            options += '<li>';
                            options += '<div class="choose-conatiner-default"><input class="choose-default" '+selected+' type="radio" name="choices"></div>';
                            options += '<div class="choose-conatiner-label"><input class="choose-label" type="text" value="'+data_select.label+'"></div>';
                            options += '<div class="choose-conatiner-value"><input class="choose-value" type="text" value="'+data_select.value+'"></div>';
                            options += '<div class="choose-conatiner-data hidden"><input class="choose-data" type="text" value="'+data_select.data+'"></div>';
                            options += '<div class="choose-conatiner-action"><div class="choices-add">+</div><div class="choices-minus">-</div></div></li>';
                        });
                     $(data_id).find(".choose-datas").html(options);
                    break;
                case "logic":
                    if( value == "uncheck" || value === undefined || value == ""){
                        $(data_id).find("input").prop('checked', false);
                        $(data_id).find("input").data("logic","");
                    }else{
                        $(data_id).find("input").prop('checked', true);
                        $(data_id).find("input").data("logic",value);
                    }
                    break;
            }
        }
        $.cfbuilder_remove_empty = function() {
            $( ".cfbuilder-row" ).each(function( index ) {
                    var elm = $(this);
                    var check = $(this).find(".cfbuilder-field").length;
                    if( check > 0 ){
                      elm.removeClass("cfbuilder-row-empty");
                    }else{
                       elm.addClass("cfbuilder-row-empty"); 
                    }
            });
        }
        $.cfbuilder_update_merge_tag = function(){
            $(".cfbuilder__toolbar_element-insert-tag").each(function( index ) {
                var html = '<option value="">Insert Merge Tag</option>';
                var type = $(this).data("type");
                var current = $(this).data("current");
                var current_name = $('.cfbuilder-field.cfbuilder_active').find("input").attr("name");
                var names = $.cfbuilder_get_all_name(current_name,type,current_name);
                $.each(names, function( index, name ) {
                     html +='<option value="['+name+']">['+name+']</option>';
                });
                $(this).html(html);
            })    
        }
        $.cfbuilder_get_all_name = function(current = false, type="all", current_name = ""){
            var names = [];
            $(".cfbuilder-field input, .cfbuilder-field textarea, .cfbuilder-field select").each(function( index ) {
                var name = $(this).attr("name");
                if( type != "all"){
                    var check_type = $(this).closest(".cfbuilder-field").data("type");
                    if( type ==  check_type){
                        if( !names.includes(name)){
                            names.push(name);
                            if( current_name == name){
                                return false;
                            }
                        }
                    }
                }else{
                    if( !names.includes(name)){
                        names.push(name);
                        if( current_name == name){
                            return false;
                        }
                    }
                }
            });
            return names;
        }
        $("body").on("change",".cfbuilder__toolbar_element-insert-tag",function(e){
            var value = $(this).val();
            $(this).closest(".cfbuilder__toolbar_element").find("textarea").insertAtCaret(value).trigger( "keyup" );
        })
        $('body').on('click', '.calculation-form-import', function(e){
            e.preventDefault();
                var button = $(this),
                    custom_uploader = wp.media({
                title: 'Import template',
                library : {
                    type : [ 'json',"text"]
                },
                button: {
                    text: 'Import template' // button label text
                },
                multiple: false // for multiple image selection set to true
            }).on('select', function() { // it also has "open" and "close" events 
                var attachment = custom_uploader.state().get('selection').first().toJSON();
                $.getJSON(attachment.url, function(data){
                    $("#calculation_forms_data").val(data);
                    $.load_builder_form();
                }).fail(function(){
                  alert("Error");
                });
            })
            .open();
        });
        $("body").on("click",".calculation-form-export",function(e){
            e.preventDefault;
            $("<a />", {
                "download": "email_template.json",
                "href" : "data:text/plain;charset=utf-8," + encodeURIComponent(JSON.stringify($("#calculation_forms_data").val()))
              }).appendTo("body")
              .click(function() {
                 $(this).remove()
              })[0].click();
        })
        $('body').on("click",".calculation-forms-step-header a",function(e){
            e.preventDefault();
            $(".calculation-forms-step-header li").removeClass("active");
            var id = $(this).data("id");
            if(id == 0 ){
                var tag_id = Math.floor(Math.random() * 9999);
                $(this).closest("li").before("<li><a data-id='"+tag_id+"' href='#'>Step</a><li/>");
                var html_step = '<div class="calculation-forms-step-tab calculation-forms-step-tab-'+tag_id+' hidden">';
                html_step +='<div class="cfbuilder-content-body" ><div class="cfbuilder-container-row" data-type="row1">';
                html_step +='<div class="cfbuilder-row cfbuilder-row-empty"></div></div> </div></div>';
                 html_step = $(html_step);
                 html_step.find(".cfbuilder-content-body").cfbuilder_row_sortable();
                html_step.find( ".cfbuilder-row" ).cfbuilder_element_sortable();
                $(".calculation-forms-step-container").append(html_step);
            }else{
                $(this).closest("li").addClass('active');
                $("div").remove(".cfbuilder__toolbar");
                $("div").removeClass("cfbuilder_active");
                $(".cfbuilder-sidebar-tool h3").html("Multi-step settings");
                $(".tool-filed-tab-settings").click();
                $(".cfbuilder__toolbar_element").addClass("hidden");
                $("#cfbuilder__toolbar_multi-step-type,.cfbuilder-sidebar-tool").removeClass("hidden");
                $("#cfbuilder__toolbar_multi-step-type,#cfbuilder__toolbar_multi-step-name,#cfbuilder__toolbar_multi-step-remove").removeClass("hidden");
                $("#cfbuilder__toolbar_multi-step-color,#cfbuilder__toolbar_multi-step-color-active,#cfbuilder__toolbar_multi-step-color-completed").removeClass("hidden");
                $("#cfbuilder__toolbar_multi-step-background,#cfbuilder__toolbar_multi-step-background-active,#cfbuilder__toolbar_multi-step-background-completed").removeClass("hidden");
                var name = $(this).html();
                var next = $(".calculation-forms-step-tab:not(.hidden)").data("next");
                var prev = $(".calculation-forms-step-tab:not(.hidden)").data("prev");
                var tag_id = $(this).data("id");
                $("#cfbuilder__toolbar_multi-step-name input").val(name);
                $("#cfbuilder__toolbar_multi-step-next-button input").val(next);
                $("#cfbuilder__toolbar_multi-step-prev-button input").val(prev);
                $(".calculation-forms-step-tab").addClass("hidden");
                $(".calculation-forms-step-tab-"+tag_id).removeClass("hidden");
            }
         })
        $('body').on("click",".calculation-forms-remove-step",function(e){
            e.preventDefault();
            var count_step = $(".calculation-forms-step-header li").length;
            if( count_step > 0 ) {
                var id = $(".calculation-forms-step-header li.active a").data("id");
                if (typeof id === "undefined") {
                    alert("Choose Step");
                }else{
                   $(".calculation-forms-step-header li.active, .calculation-forms-step-tab-"+id).remove(); 
                }
                

            }else{
                alert("No Step");
            }
            
            
         })
        $(function() {
            $('.wp_color').wpColorPicker();
        });
        $.fn.insertAtCaret = function(myValue){
            this.each(function() {
              if (document.selection) {
                this.focus();
                var sel = document.selection.createRange();
                sel.text = myValue;
                this.focus();
              } else if (this.selectionStart || this.selectionStart == '0') {
                var startPos = this.selectionStart;
                var endPos = this.selectionEnd;
                var scrollTop = this.scrollTop;
                this.value = this.value.substring(0, startPos) +
                  myValue + this.value.substring(endPos,this.value.length);
                this.focus();
                this.selectionStart = startPos + myValue.length;
                this.selectionEnd = startPos + myValue.length;
                this.scrollTop = scrollTop;
              } else {
                this.value += myValue;
                this.focus();
              }
            });
            return this;
        }
    })
})(jQuery);
!(function (e) {
    var t = {};
    function c(r) {
        if (t[r]) return t[r].exports;
        var n = (t[r] = { i: r, l: !1, exports: {} });
        return e[r].call(n.exports, n, n.exports, c), (n.l = !0), n.exports;
    }
    (c.m = e),
        (c.c = t),
        (c.d = function (e, t, r) {
            c.o(e, t) || Object.defineProperty(e, t, { enumerable: !0, get: r });
        }),
        (c.r = function (e) {
            "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(e, "__esModule", { value: !0 });
        }),
        (c.t = function (e, t) {
            if ((1 & t && (e = c(e)), 8 & t)) return e;
            if (4 & t && "object" == typeof e && e && e.__esModule) return e;
            var r = Object.create(null);
            if ((c.r(r), Object.defineProperty(r, "default", { enumerable: !0, value: e }), 2 & t && "string" != typeof e))
                for (var n in e)
                    c.d(
                        r,
                        n,
                        function (t) {
                            return e[t];
                        }.bind(null, n)
                    );
            return r;
        }),
        (c.n = function (e) {
            var t =
                e && e.__esModule
                    ? function () {
                          return e.default;
                      }
                    : function () {
                          return e;
                      };
            return c.d(t, "a", t), t;
        }),
        (c.o = function (e, t) {
            return Object.prototype.hasOwnProperty.call(e, t);
        }),
        (c.p = ""),
        c((c.s = 6));
})([
    function (e, t) {
        e.exports = window.wp.element;
    },
    function (e, t) {
        e.exports = window.wp.i18n;
    },
    function (e, t) {
        e.exports = window.wp.blocks;
    },
    function (e, t) {
        e.exports = window.wp.apiFetch;
    },
    function (e, t) {
        e.exports = window.wp.compose;
    },
    function (e, t) {
        e.exports = window.wp.components;
    },
    function (e, t, c) {
        "use strict";
        c.r(t);
        var r = c(0),
            n = c(1),
            o = c(2),
            l = c(3),
            i = c.n(l),
            s = c(4),
            f = c(5);
        const m = new Map();
        
        jQuery.post(ajaxurl, {"action":"calculation_forms_get_lists"}, function(e) { 
            Object.entries(e).forEach(([e, t]) => {
                m.set(t.id, t);
            });
            
        });
        var u = {
            from: [
                {
                    type: "shortcode",
                    tag: "calculation",
                    attributes: {
                        id: {
                            type: "integer",
                            shortcode: function (e) {
                                var t = e.named.id;
                                return parseInt(t);
                            },
                        },
                        title: {
                            type: "string",
                            shortcode: function (e) {
                                return e.named.title;
                            },
                        },
                    },
                },
            ],
            to: [
                {
                    type: "block",
                    blocks: ["core/shortcode"],
                    transform: function (e) {
                        return Object(o.createBlock)("core/shortcode", { text: '[calculation id="'.concat(e.id, '" title="').concat(e.title, '"]') });
                    },
                },
            ],
        };
        Object(o.registerBlockType)("calculation-forms/selector", {
            title: Object(n.__)("Calculation Forms", "calculation-forms"),
            description: Object(n.__)("Insert a contact form you have created with Calculation Forms", "calculation-forms"),
            category: "widgets",
            attributes: { id: { type: "integer" }, title: { type: "string" } },
            icon: "feedback",
            transforms: u,
            edit: function e({ attributes: t, setAttributes: c }) {
                if (!m.size && !t.id)
                    return Object(r.createElement)("div", { className: "components-placeholder" }, Object(r.createElement)("p", null, Object(n.__)("No contact forms were found. Create a contact form first.", "calculation-forms")));
                const o = Array.from(m.values(), (e) => ({ value: e.id, label: e.title }));
                if (t.id) o.length || o.push({ value: t.id, label: t.title });
                else {
                    const e = o[0];
                    t = { id: parseInt(e.value), title: e.label };
                }
                const a = "calculation-forms-" + Object(s.useInstanceId)(e);
                return Object(r.createElement)(
                    "div",
                    { className: "components-placeholder" },
                    Object(r.createElement)("label", { htmlFor: a, className: "components-placeholder__instructions" }, Object(n.__)("Display a calculation form:", "calculation-forms")),
                    Object(r.createElement)(f.SelectControl, { id: a, options: o, value: t.id, onChange: (e) => c({ id: parseInt(e), title: m.get(parseInt(e)).title }) })
                );
            },
            save: function (e) {
                var t = e.attributes;
                return Object(r.createElement)("div", null, '[calculation id="', t.id, '" title="', t.title, '"]');
            },
        });
    },
]);

<?php
add_action( 'init', 'calculation_form_init_block_editor', 10, 0 );
function calculation_form_init_block_editor() {
    wp_register_script(
        'calculation-forms-block-editor',
        CALCULATION_FORMS_PLUGIN_URL. "backend/block_editor/index.js",
        array(
            'wp-components',
            'wp-compose',
            'wp-blocks',
            'wp-element',
            'wp-i18n',
        ),
        "1.0"
    );
    register_block_type(
        'calculation-forms/selector',
        array(
            'editor_script' => 'calculation-forms-block-editor',
        )
    );
}
add_action( 'wp_ajax_calculation_forms_get_lists', 'calculation_forms_get_lists' );
function calculation_forms_get_lists(){
    $the_query = new WP_Query(array("post_type"=>"calculation_forms"));
    $datas = array();
    $datas[] = array("id"=>"","title"=>"-------");
    if( $the_query->have_posts()){
        while ( $the_query->have_posts() ) {
            $the_query->the_post();
           $datas[] = array("id"=>get_the_ID(),"title"=>get_the_title());
        }
    }
    wp_reset_postdata();
    wp_send_json($datas);
    die();
}
